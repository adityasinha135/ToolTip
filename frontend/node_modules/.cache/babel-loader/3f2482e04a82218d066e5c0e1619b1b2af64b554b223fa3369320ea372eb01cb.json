{"ast":null,"code":"/**\n * Copyright 2023 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as chrome from './chrome.js';\nimport * as chromedriver from './chromedriver.js';\nimport * as chromium from './chromium.js';\nimport * as firefox from './firefox.js';\nimport { Browser, BrowserPlatform, BrowserTag, ChromeReleaseChannel } from './types.js';\nexport const downloadUrls = {\n  [Browser.CHROMEDRIVER]: chromedriver.resolveDownloadUrl,\n  [Browser.CHROME]: chrome.resolveDownloadUrl,\n  [Browser.CHROMIUM]: chromium.resolveDownloadUrl,\n  [Browser.FIREFOX]: firefox.resolveDownloadUrl\n};\nexport const downloadPaths = {\n  [Browser.CHROMEDRIVER]: chromedriver.resolveDownloadPath,\n  [Browser.CHROME]: chrome.resolveDownloadPath,\n  [Browser.CHROMIUM]: chromium.resolveDownloadPath,\n  [Browser.FIREFOX]: firefox.resolveDownloadPath\n};\nexport const executablePathByBrowser = {\n  [Browser.CHROMEDRIVER]: chromedriver.relativeExecutablePath,\n  [Browser.CHROME]: chrome.relativeExecutablePath,\n  [Browser.CHROMIUM]: chromium.relativeExecutablePath,\n  [Browser.FIREFOX]: firefox.relativeExecutablePath\n};\nexport { Browser, BrowserPlatform, ChromeReleaseChannel };\n/**\n * @public\n */\nexport async function resolveBuildId(browser, platform, tag) {\n  switch (browser) {\n    case Browser.FIREFOX:\n      switch (tag) {\n        case BrowserTag.LATEST:\n          return await firefox.resolveBuildId('FIREFOX_NIGHTLY');\n        case BrowserTag.BETA:\n        case BrowserTag.CANARY:\n        case BrowserTag.DEV:\n        case BrowserTag.STABLE:\n          throw new Error(`${tag} is not supported for ${browser}. Use 'latest' instead.`);\n      }\n    case Browser.CHROME:\n      switch (tag) {\n        case BrowserTag.LATEST:\n          return await chrome.resolveBuildId(platform, ChromeReleaseChannel.CANARY);\n        case BrowserTag.BETA:\n          return await chrome.resolveBuildId(platform, ChromeReleaseChannel.BETA);\n        case BrowserTag.CANARY:\n          return await chrome.resolveBuildId(platform, ChromeReleaseChannel.CANARY);\n        case BrowserTag.DEV:\n          return await chrome.resolveBuildId(platform, ChromeReleaseChannel.DEV);\n        case BrowserTag.STABLE:\n          return await chrome.resolveBuildId(platform, ChromeReleaseChannel.STABLE);\n      }\n    case Browser.CHROMEDRIVER:\n      switch (tag) {\n        case BrowserTag.LATEST:\n        case BrowserTag.CANARY:\n          return await chromedriver.resolveBuildId(ChromeReleaseChannel.CANARY);\n        case BrowserTag.BETA:\n          return await chromedriver.resolveBuildId(ChromeReleaseChannel.BETA);\n        case BrowserTag.DEV:\n          return await chromedriver.resolveBuildId(ChromeReleaseChannel.DEV);\n        case BrowserTag.STABLE:\n          return await chromedriver.resolveBuildId(ChromeReleaseChannel.STABLE);\n      }\n    case Browser.CHROMIUM:\n      switch (tag) {\n        case BrowserTag.LATEST:\n          return await chromium.resolveBuildId(platform);\n        case BrowserTag.BETA:\n        case BrowserTag.CANARY:\n        case BrowserTag.DEV:\n        case BrowserTag.STABLE:\n          throw new Error(`${tag} is not supported for ${browser}. Use 'latest' instead.`);\n      }\n  }\n  // We assume the tag is the buildId if it didn't match any keywords.\n  return tag;\n}\n/**\n * @public\n */\nexport async function createProfile(browser, opts) {\n  switch (browser) {\n    case Browser.FIREFOX:\n      return await firefox.createProfile(opts);\n    case Browser.CHROME:\n    case Browser.CHROMIUM:\n      throw new Error(`Profile creation is not support for ${browser} yet`);\n  }\n}\n/**\n * @public\n */\nexport function resolveSystemExecutablePath(browser, platform, channel) {\n  switch (browser) {\n    case Browser.CHROMEDRIVER:\n    case Browser.FIREFOX:\n    case Browser.CHROMIUM:\n      throw new Error(`System browser detection is not supported for ${browser} yet.`);\n    case Browser.CHROME:\n      return chrome.resolveSystemExecutablePath(platform, channel);\n  }\n}","map":{"version":3,"names":["chrome","chromedriver","chromium","firefox","Browser","BrowserPlatform","BrowserTag","ChromeReleaseChannel","downloadUrls","CHROMEDRIVER","resolveDownloadUrl","CHROME","CHROMIUM","FIREFOX","downloadPaths","resolveDownloadPath","executablePathByBrowser","relativeExecutablePath","resolveBuildId","browser","platform","tag","LATEST","BETA","CANARY","DEV","STABLE","Error","createProfile","opts","resolveSystemExecutablePath","channel"],"sources":["/home/adityasinha/Desktop/React/topdf/node_modules/@puppeteer/browsers/src/browser-data/browser-data.ts"],"sourcesContent":["/**\n * Copyright 2023 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as chrome from './chrome.js';\nimport * as chromedriver from './chromedriver.js';\nimport * as chromium from './chromium.js';\nimport * as firefox from './firefox.js';\nimport {\n  Browser,\n  BrowserPlatform,\n  BrowserTag,\n  ChromeReleaseChannel,\n  ProfileOptions,\n} from './types.js';\n\nexport {ProfileOptions};\n\nexport const downloadUrls = {\n  [Browser.CHROMEDRIVER]: chromedriver.resolveDownloadUrl,\n  [Browser.CHROME]: chrome.resolveDownloadUrl,\n  [Browser.CHROMIUM]: chromium.resolveDownloadUrl,\n  [Browser.FIREFOX]: firefox.resolveDownloadUrl,\n};\n\nexport const downloadPaths = {\n  [Browser.CHROMEDRIVER]: chromedriver.resolveDownloadPath,\n  [Browser.CHROME]: chrome.resolveDownloadPath,\n  [Browser.CHROMIUM]: chromium.resolveDownloadPath,\n  [Browser.FIREFOX]: firefox.resolveDownloadPath,\n};\n\nexport const executablePathByBrowser = {\n  [Browser.CHROMEDRIVER]: chromedriver.relativeExecutablePath,\n  [Browser.CHROME]: chrome.relativeExecutablePath,\n  [Browser.CHROMIUM]: chromium.relativeExecutablePath,\n  [Browser.FIREFOX]: firefox.relativeExecutablePath,\n};\n\nexport {Browser, BrowserPlatform, ChromeReleaseChannel};\n\n/**\n * @public\n */\nexport async function resolveBuildId(\n  browser: Browser,\n  platform: BrowserPlatform,\n  tag: string\n): Promise<string> {\n  switch (browser) {\n    case Browser.FIREFOX:\n      switch (tag as BrowserTag) {\n        case BrowserTag.LATEST:\n          return await firefox.resolveBuildId('FIREFOX_NIGHTLY');\n        case BrowserTag.BETA:\n        case BrowserTag.CANARY:\n        case BrowserTag.DEV:\n        case BrowserTag.STABLE:\n          throw new Error(\n            `${tag} is not supported for ${browser}. Use 'latest' instead.`\n          );\n      }\n    case Browser.CHROME:\n      switch (tag as BrowserTag) {\n        case BrowserTag.LATEST:\n          return await chrome.resolveBuildId(\n            platform,\n            ChromeReleaseChannel.CANARY\n          );\n        case BrowserTag.BETA:\n          return await chrome.resolveBuildId(\n            platform,\n            ChromeReleaseChannel.BETA\n          );\n        case BrowserTag.CANARY:\n          return await chrome.resolveBuildId(\n            platform,\n            ChromeReleaseChannel.CANARY\n          );\n        case BrowserTag.DEV:\n          return await chrome.resolveBuildId(\n            platform,\n            ChromeReleaseChannel.DEV\n          );\n        case BrowserTag.STABLE:\n          return await chrome.resolveBuildId(\n            platform,\n            ChromeReleaseChannel.STABLE\n          );\n      }\n    case Browser.CHROMEDRIVER:\n      switch (tag as BrowserTag) {\n        case BrowserTag.LATEST:\n        case BrowserTag.CANARY:\n          return await chromedriver.resolveBuildId(ChromeReleaseChannel.CANARY);\n        case BrowserTag.BETA:\n          return await chromedriver.resolveBuildId(ChromeReleaseChannel.BETA);\n        case BrowserTag.DEV:\n          return await chromedriver.resolveBuildId(ChromeReleaseChannel.DEV);\n        case BrowserTag.STABLE:\n          return await chromedriver.resolveBuildId(ChromeReleaseChannel.STABLE);\n      }\n    case Browser.CHROMIUM:\n      switch (tag as BrowserTag) {\n        case BrowserTag.LATEST:\n          return await chromium.resolveBuildId(platform);\n        case BrowserTag.BETA:\n        case BrowserTag.CANARY:\n        case BrowserTag.DEV:\n        case BrowserTag.STABLE:\n          throw new Error(\n            `${tag} is not supported for ${browser}. Use 'latest' instead.`\n          );\n      }\n  }\n  // We assume the tag is the buildId if it didn't match any keywords.\n  return tag;\n}\n\n/**\n * @public\n */\nexport async function createProfile(\n  browser: Browser,\n  opts: ProfileOptions\n): Promise<void> {\n  switch (browser) {\n    case Browser.FIREFOX:\n      return await firefox.createProfile(opts);\n    case Browser.CHROME:\n    case Browser.CHROMIUM:\n      throw new Error(`Profile creation is not support for ${browser} yet`);\n  }\n}\n\n/**\n * @public\n */\nexport function resolveSystemExecutablePath(\n  browser: Browser,\n  platform: BrowserPlatform,\n  channel: ChromeReleaseChannel\n): string {\n  switch (browser) {\n    case Browser.CHROMEDRIVER:\n    case Browser.FIREFOX:\n    case Browser.CHROMIUM:\n      throw new Error(\n        `System browser detection is not supported for ${browser} yet.`\n      );\n    case Browser.CHROME:\n      return chrome.resolveSystemExecutablePath(platform, channel);\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}