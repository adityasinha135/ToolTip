{"ast":null,"code":"/**\n * Copyright 2023 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { ElementHandle } from '../api/ElementHandle.js';\nimport { isErrorLike } from '../util/ErrorLike.js';\nimport { interpolateFunction, stringifyFunction } from '../util/Function.js';\nimport { transposeIterableHandle } from './HandleIterator.js';\nimport { LazyArg } from './LazyArg.js';\n/**\n * @internal\n */\nexport class QueryHandler {\n  // Either one of these may be implemented, but at least one must be.\n  static querySelectorAll;\n  static querySelector;\n  static get _querySelector() {\n    if (this.querySelector) {\n      return this.querySelector;\n    }\n    if (!this.querySelectorAll) {\n      throw new Error('Cannot create default `querySelector`.');\n    }\n    return this.querySelector = interpolateFunction(async (node, selector, PuppeteerUtil) => {\n      const querySelectorAll = PLACEHOLDER('querySelectorAll');\n      const results = querySelectorAll(node, selector, PuppeteerUtil);\n      for await (const result of results) {\n        return result;\n      }\n      return null;\n    }, {\n      querySelectorAll: stringifyFunction(this.querySelectorAll)\n    });\n  }\n  static get _querySelectorAll() {\n    if (this.querySelectorAll) {\n      return this.querySelectorAll;\n    }\n    if (!this.querySelector) {\n      throw new Error('Cannot create default `querySelectorAll`.');\n    }\n    return this.querySelectorAll = interpolateFunction(async function* (node, selector, PuppeteerUtil) {\n      const querySelector = PLACEHOLDER('querySelector');\n      const result = await querySelector(node, selector, PuppeteerUtil);\n      if (result) {\n        yield result;\n      }\n    }, {\n      querySelector: stringifyFunction(this.querySelector)\n    });\n  }\n  /**\n   * Queries for multiple nodes given a selector and {@link ElementHandle}.\n   *\n   * Akin to {@link https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelectorAll | Document.querySelectorAll()}.\n   */\n  static async *queryAll(element, selector) {\n    element.assertElementHasWorld();\n    const handle = await element.evaluateHandle(this._querySelectorAll, selector, LazyArg.create(context => {\n      return context.puppeteerUtil;\n    }));\n    yield* transposeIterableHandle(handle);\n  }\n  /**\n   * Queries for a single node given a selector and {@link ElementHandle}.\n   *\n   * Akin to {@link https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector}.\n   */\n  static async queryOne(element, selector) {\n    element.assertElementHasWorld();\n    const result = await element.evaluateHandle(this._querySelector, selector, LazyArg.create(context => {\n      return context.puppeteerUtil;\n    }));\n    if (!(result instanceof ElementHandle)) {\n      await result.dispose();\n      return null;\n    }\n    return result;\n  }\n  /**\n   * Waits until a single node appears for a given selector and\n   * {@link ElementHandle}.\n   *\n   * This will always query the handle in the Puppeteer world and migrate the\n   * result to the main world.\n   */\n  static async waitFor(elementOrFrame, selector, options) {\n    let frame;\n    let element;\n    if (!(elementOrFrame instanceof ElementHandle)) {\n      frame = elementOrFrame;\n    } else {\n      frame = elementOrFrame.frame;\n      element = await frame.isolatedRealm().adoptHandle(elementOrFrame);\n    }\n    const {\n      visible = false,\n      hidden = false,\n      timeout,\n      signal\n    } = options;\n    try {\n      signal?.throwIfAborted();\n      const handle = await frame.isolatedRealm().waitForFunction(async (PuppeteerUtil, query, selector, root, visible) => {\n        const querySelector = PuppeteerUtil.createFunction(query);\n        const node = await querySelector(root ?? document, selector, PuppeteerUtil);\n        return PuppeteerUtil.checkVisibility(node, visible);\n      }, {\n        polling: visible || hidden ? 'raf' : 'mutation',\n        root: element,\n        timeout,\n        signal\n      }, LazyArg.create(context => {\n        return context.puppeteerUtil;\n      }), stringifyFunction(this._querySelector), selector, element, visible ? true : hidden ? false : undefined);\n      if (signal?.aborted) {\n        await handle.dispose();\n        throw signal.reason;\n      }\n      if (!(handle instanceof ElementHandle)) {\n        await handle.dispose();\n        return null;\n      }\n      return frame.mainRealm().transferHandle(handle);\n    } catch (error) {\n      if (!isErrorLike(error)) {\n        throw error;\n      }\n      if (error.name === 'AbortError') {\n        throw error;\n      }\n      error.message = `Waiting for selector \\`${selector}\\` failed: ${error.message}`;\n      throw error;\n    } finally {\n      if (element) {\n        await element.dispose();\n      }\n    }\n  }\n}","map":{"version":3,"names":["ElementHandle","isErrorLike","interpolateFunction","stringifyFunction","transposeIterableHandle","LazyArg","QueryHandler","querySelectorAll","querySelector","_querySelector","Error","node","selector","PuppeteerUtil","PLACEHOLDER","results","result","_querySelectorAll","queryAll","element","assertElementHasWorld","handle","evaluateHandle","create","context","puppeteerUtil","queryOne","dispose","waitFor","elementOrFrame","options","frame","isolatedRealm","adoptHandle","visible","hidden","timeout","signal","throwIfAborted","waitForFunction","query","root","createFunction","document","checkVisibility","polling","undefined","aborted","reason","mainRealm","transferHandle","error","name","message"],"sources":["/home/adityasinha/Desktop/React/topdf/node_modules/puppeteer-core/src/common/QueryHandler.ts"],"sourcesContent":["/**\n * Copyright 2023 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {ElementHandle} from '../api/ElementHandle.js';\nimport type {Frame} from '../api/Frame.js';\nimport type PuppeteerUtil from '../injected/injected.js';\nimport {isErrorLike} from '../util/ErrorLike.js';\nimport {interpolateFunction, stringifyFunction} from '../util/Function.js';\n\nimport {transposeIterableHandle} from './HandleIterator.js';\nimport type {WaitForSelectorOptions} from './IsolatedWorld.js';\nimport {LazyArg} from './LazyArg.js';\nimport type {Awaitable, AwaitableIterable} from './types.js';\n\n/**\n * @internal\n */\nexport type QuerySelectorAll = (\n  node: Node,\n  selector: string,\n  PuppeteerUtil: PuppeteerUtil\n) => AwaitableIterable<Node>;\n\n/**\n * @internal\n */\nexport type QuerySelector = (\n  node: Node,\n  selector: string,\n  PuppeteerUtil: PuppeteerUtil\n) => Awaitable<Node | null>;\n\n/**\n * @internal\n */\nexport class QueryHandler {\n  // Either one of these may be implemented, but at least one must be.\n  static querySelectorAll?: QuerySelectorAll;\n  static querySelector?: QuerySelector;\n\n  static get _querySelector(): QuerySelector {\n    if (this.querySelector) {\n      return this.querySelector;\n    }\n    if (!this.querySelectorAll) {\n      throw new Error('Cannot create default `querySelector`.');\n    }\n\n    return (this.querySelector = interpolateFunction(\n      async (node, selector, PuppeteerUtil) => {\n        const querySelectorAll: QuerySelectorAll =\n          PLACEHOLDER('querySelectorAll');\n        const results = querySelectorAll(node, selector, PuppeteerUtil);\n        for await (const result of results) {\n          return result;\n        }\n        return null;\n      },\n      {\n        querySelectorAll: stringifyFunction(this.querySelectorAll),\n      }\n    ));\n  }\n\n  static get _querySelectorAll(): QuerySelectorAll {\n    if (this.querySelectorAll) {\n      return this.querySelectorAll;\n    }\n    if (!this.querySelector) {\n      throw new Error('Cannot create default `querySelectorAll`.');\n    }\n\n    return (this.querySelectorAll = interpolateFunction(\n      async function* (node, selector, PuppeteerUtil) {\n        const querySelector: QuerySelector = PLACEHOLDER('querySelector');\n        const result = await querySelector(node, selector, PuppeteerUtil);\n        if (result) {\n          yield result;\n        }\n      },\n      {\n        querySelector: stringifyFunction(this.querySelector),\n      }\n    ));\n  }\n\n  /**\n   * Queries for multiple nodes given a selector and {@link ElementHandle}.\n   *\n   * Akin to {@link https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelectorAll | Document.querySelectorAll()}.\n   */\n  static async *queryAll(\n    element: ElementHandle<Node>,\n    selector: string\n  ): AwaitableIterable<ElementHandle<Node>> {\n    element.assertElementHasWorld();\n    const handle = await element.evaluateHandle(\n      this._querySelectorAll,\n      selector,\n      LazyArg.create(context => {\n        return context.puppeteerUtil;\n      })\n    );\n    yield* transposeIterableHandle(handle);\n  }\n\n  /**\n   * Queries for a single node given a selector and {@link ElementHandle}.\n   *\n   * Akin to {@link https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector}.\n   */\n  static async queryOne(\n    element: ElementHandle<Node>,\n    selector: string\n  ): Promise<ElementHandle<Node> | null> {\n    element.assertElementHasWorld();\n    const result = await element.evaluateHandle(\n      this._querySelector,\n      selector,\n      LazyArg.create(context => {\n        return context.puppeteerUtil;\n      })\n    );\n    if (!(result instanceof ElementHandle)) {\n      await result.dispose();\n      return null;\n    }\n    return result;\n  }\n\n  /**\n   * Waits until a single node appears for a given selector and\n   * {@link ElementHandle}.\n   *\n   * This will always query the handle in the Puppeteer world and migrate the\n   * result to the main world.\n   */\n  static async waitFor(\n    elementOrFrame: ElementHandle<Node> | Frame,\n    selector: string,\n    options: WaitForSelectorOptions\n  ): Promise<ElementHandle<Node> | null> {\n    let frame: Frame;\n    let element: ElementHandle<Node> | undefined;\n    if (!(elementOrFrame instanceof ElementHandle)) {\n      frame = elementOrFrame;\n    } else {\n      frame = elementOrFrame.frame;\n      element = await frame.isolatedRealm().adoptHandle(elementOrFrame);\n    }\n\n    const {visible = false, hidden = false, timeout, signal} = options;\n\n    try {\n      signal?.throwIfAborted();\n\n      const handle = await frame.isolatedRealm().waitForFunction(\n        async (PuppeteerUtil, query, selector, root, visible) => {\n          const querySelector = PuppeteerUtil.createFunction(\n            query\n          ) as QuerySelector;\n          const node = await querySelector(\n            root ?? document,\n            selector,\n            PuppeteerUtil\n          );\n          return PuppeteerUtil.checkVisibility(node, visible);\n        },\n        {\n          polling: visible || hidden ? 'raf' : 'mutation',\n          root: element,\n          timeout,\n          signal,\n        },\n        LazyArg.create(context => {\n          return context.puppeteerUtil;\n        }),\n        stringifyFunction(this._querySelector),\n        selector,\n        element,\n        visible ? true : hidden ? false : undefined\n      );\n\n      if (signal?.aborted) {\n        await handle.dispose();\n        throw signal.reason;\n      }\n\n      if (!(handle instanceof ElementHandle)) {\n        await handle.dispose();\n        return null;\n      }\n      return frame.mainRealm().transferHandle(handle);\n    } catch (error) {\n      if (!isErrorLike(error)) {\n        throw error;\n      }\n      if (error.name === 'AbortError') {\n        throw error;\n      }\n      error.message = `Waiting for selector \\`${selector}\\` failed: ${error.message}`;\n      throw error;\n    } finally {\n      if (element) {\n        await element.dispose();\n      }\n    }\n  }\n}\n"],"mappings":"AAAA;;;;;;;;;;;;;;;AAgBA,SAAQA,aAAa,QAAO,yBAAyB;AAGrD,SAAQC,WAAW,QAAO,sBAAsB;AAChD,SAAQC,mBAAmB,EAAEC,iBAAiB,QAAO,qBAAqB;AAE1E,SAAQC,uBAAuB,QAAO,qBAAqB;AAE3D,SAAQC,OAAO,QAAO,cAAc;AAqBpC;;;AAGA,OAAM,MAAOC,YAAY;EACvB;EACA,OAAOC,gBAAgB;EACvB,OAAOC,aAAa;EAEpB,WAAWC,cAAcA,CAAA;IACvB,IAAI,IAAI,CAACD,aAAa,EAAE;MACtB,OAAO,IAAI,CAACA,aAAa;;IAE3B,IAAI,CAAC,IAAI,CAACD,gBAAgB,EAAE;MAC1B,MAAM,IAAIG,KAAK,CAAC,wCAAwC,CAAC;;IAG3D,OAAQ,IAAI,CAACF,aAAa,GAAGN,mBAAmB,CAC9C,OAAOS,IAAI,EAAEC,QAAQ,EAAEC,aAAa,KAAI;MACtC,MAAMN,gBAAgB,GACpBO,WAAW,CAAC,kBAAkB,CAAC;MACjC,MAAMC,OAAO,GAAGR,gBAAgB,CAACI,IAAI,EAAEC,QAAQ,EAAEC,aAAa,CAAC;MAC/D,WAAW,MAAMG,MAAM,IAAID,OAAO,EAAE;QAClC,OAAOC,MAAM;;MAEf,OAAO,IAAI;IACb,CAAC,EACD;MACET,gBAAgB,EAAEJ,iBAAiB,CAAC,IAAI,CAACI,gBAAgB;KAC1D,CACF;EACH;EAEA,WAAWU,iBAAiBA,CAAA;IAC1B,IAAI,IAAI,CAACV,gBAAgB,EAAE;MACzB,OAAO,IAAI,CAACA,gBAAgB;;IAE9B,IAAI,CAAC,IAAI,CAACC,aAAa,EAAE;MACvB,MAAM,IAAIE,KAAK,CAAC,2CAA2C,CAAC;;IAG9D,OAAQ,IAAI,CAACH,gBAAgB,GAAGL,mBAAmB,CACjD,iBAAiBS,IAAI,EAAEC,QAAQ,EAAEC,aAAa;MAC5C,MAAML,aAAa,GAAkBM,WAAW,CAAC,eAAe,CAAC;MACjE,MAAME,MAAM,GAAG,MAAMR,aAAa,CAACG,IAAI,EAAEC,QAAQ,EAAEC,aAAa,CAAC;MACjE,IAAIG,MAAM,EAAE;QACV,MAAMA,MAAM;;IAEhB,CAAC,EACD;MACER,aAAa,EAAEL,iBAAiB,CAAC,IAAI,CAACK,aAAa;KACpD,CACF;EACH;EAEA;;;;;EAKA,cAAcU,QAAQA,CACpBC,OAA4B,EAC5BP,QAAgB;IAEhBO,OAAO,CAACC,qBAAqB,EAAE;IAC/B,MAAMC,MAAM,GAAG,MAAMF,OAAO,CAACG,cAAc,CACzC,IAAI,CAACL,iBAAiB,EACtBL,QAAQ,EACRP,OAAO,CAACkB,MAAM,CAACC,OAAO,IAAG;MACvB,OAAOA,OAAO,CAACC,aAAa;IAC9B,CAAC,CAAC,CACH;IACD,OAAOrB,uBAAuB,CAACiB,MAAM,CAAC;EACxC;EAEA;;;;;EAKA,aAAaK,QAAQA,CACnBP,OAA4B,EAC5BP,QAAgB;IAEhBO,OAAO,CAACC,qBAAqB,EAAE;IAC/B,MAAMJ,MAAM,GAAG,MAAMG,OAAO,CAACG,cAAc,CACzC,IAAI,CAACb,cAAc,EACnBG,QAAQ,EACRP,OAAO,CAACkB,MAAM,CAACC,OAAO,IAAG;MACvB,OAAOA,OAAO,CAACC,aAAa;IAC9B,CAAC,CAAC,CACH;IACD,IAAI,EAAET,MAAM,YAAYhB,aAAa,CAAC,EAAE;MACtC,MAAMgB,MAAM,CAACW,OAAO,EAAE;MACtB,OAAO,IAAI;;IAEb,OAAOX,MAAM;EACf;EAEA;;;;;;;EAOA,aAAaY,OAAOA,CAClBC,cAA2C,EAC3CjB,QAAgB,EAChBkB,OAA+B;IAE/B,IAAIC,KAAY;IAChB,IAAIZ,OAAwC;IAC5C,IAAI,EAAEU,cAAc,YAAY7B,aAAa,CAAC,EAAE;MAC9C+B,KAAK,GAAGF,cAAc;KACvB,MAAM;MACLE,KAAK,GAAGF,cAAc,CAACE,KAAK;MAC5BZ,OAAO,GAAG,MAAMY,KAAK,CAACC,aAAa,EAAE,CAACC,WAAW,CAACJ,cAAc,CAAC;;IAGnE,MAAM;MAACK,OAAO,GAAG,KAAK;MAAEC,MAAM,GAAG,KAAK;MAAEC,OAAO;MAAEC;IAAM,CAAC,GAAGP,OAAO;IAElE,IAAI;MACFO,MAAM,EAAEC,cAAc,EAAE;MAExB,MAAMjB,MAAM,GAAG,MAAMU,KAAK,CAACC,aAAa,EAAE,CAACO,eAAe,CACxD,OAAO1B,aAAa,EAAE2B,KAAK,EAAE5B,QAAQ,EAAE6B,IAAI,EAAEP,OAAO,KAAI;QACtD,MAAM1B,aAAa,GAAGK,aAAa,CAAC6B,cAAc,CAChDF,KAAK,CACW;QAClB,MAAM7B,IAAI,GAAG,MAAMH,aAAa,CAC9BiC,IAAI,IAAIE,QAAQ,EAChB/B,QAAQ,EACRC,aAAa,CACd;QACD,OAAOA,aAAa,CAAC+B,eAAe,CAACjC,IAAI,EAAEuB,OAAO,CAAC;MACrD,CAAC,EACD;QACEW,OAAO,EAAEX,OAAO,IAAIC,MAAM,GAAG,KAAK,GAAG,UAAU;QAC/CM,IAAI,EAAEtB,OAAO;QACbiB,OAAO;QACPC;OACD,EACDhC,OAAO,CAACkB,MAAM,CAACC,OAAO,IAAG;QACvB,OAAOA,OAAO,CAACC,aAAa;MAC9B,CAAC,CAAC,EACFtB,iBAAiB,CAAC,IAAI,CAACM,cAAc,CAAC,EACtCG,QAAQ,EACRO,OAAO,EACPe,OAAO,GAAG,IAAI,GAAGC,MAAM,GAAG,KAAK,GAAGW,SAAS,CAC5C;MAED,IAAIT,MAAM,EAAEU,OAAO,EAAE;QACnB,MAAM1B,MAAM,CAACM,OAAO,EAAE;QACtB,MAAMU,MAAM,CAACW,MAAM;;MAGrB,IAAI,EAAE3B,MAAM,YAAYrB,aAAa,CAAC,EAAE;QACtC,MAAMqB,MAAM,CAACM,OAAO,EAAE;QACtB,OAAO,IAAI;;MAEb,OAAOI,KAAK,CAACkB,SAAS,EAAE,CAACC,cAAc,CAAC7B,MAAM,CAAC;KAChD,CAAC,OAAO8B,KAAK,EAAE;MACd,IAAI,CAAClD,WAAW,CAACkD,KAAK,CAAC,EAAE;QACvB,MAAMA,KAAK;;MAEb,IAAIA,KAAK,CAACC,IAAI,KAAK,YAAY,EAAE;QAC/B,MAAMD,KAAK;;MAEbA,KAAK,CAACE,OAAO,GAAG,0BAA0BzC,QAAQ,cAAcuC,KAAK,CAACE,OAAO,EAAE;MAC/E,MAAMF,KAAK;KACZ,SAAS;MACR,IAAIhC,OAAO,EAAE;QACX,MAAMA,OAAO,CAACQ,OAAO,EAAE;;;EAG7B"},"metadata":{},"sourceType":"module","externalDependencies":[]}