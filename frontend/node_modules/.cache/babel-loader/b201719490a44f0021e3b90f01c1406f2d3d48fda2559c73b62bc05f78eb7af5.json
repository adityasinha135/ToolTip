{"ast":null,"code":"import { addEventListener, debugError, removeEventListeners } from '../common/util.js';\nimport { assert } from '../util/assert.js';\n/**\n * @internal\n */\nexport class PipeTransport {\n  #pipeWrite;\n  #eventListeners;\n  #isClosed = false;\n  #pendingMessage = '';\n  onclose;\n  onmessage;\n  constructor(pipeWrite, pipeRead) {\n    this.#pipeWrite = pipeWrite;\n    this.#eventListeners = [addEventListener(pipeRead, 'data', buffer => {\n      return this.#dispatch(buffer);\n    }), addEventListener(pipeRead, 'close', () => {\n      if (this.onclose) {\n        this.onclose.call(null);\n      }\n    }), addEventListener(pipeRead, 'error', debugError), addEventListener(pipeWrite, 'error', debugError)];\n  }\n  send(message) {\n    assert(!this.#isClosed, '`PipeTransport` is closed.');\n    this.#pipeWrite.write(message);\n    this.#pipeWrite.write('\\0');\n  }\n  #dispatch(buffer) {\n    assert(!this.#isClosed, '`PipeTransport` is closed.');\n    let end = buffer.indexOf('\\0');\n    if (end === -1) {\n      this.#pendingMessage += buffer.toString();\n      return;\n    }\n    const message = this.#pendingMessage + buffer.toString(undefined, 0, end);\n    if (this.onmessage) {\n      this.onmessage.call(null, message);\n    }\n    let start = end + 1;\n    end = buffer.indexOf('\\0', start);\n    while (end !== -1) {\n      if (this.onmessage) {\n        this.onmessage.call(null, buffer.toString(undefined, start, end));\n      }\n      start = end + 1;\n      end = buffer.indexOf('\\0', start);\n    }\n    this.#pendingMessage = buffer.toString(undefined, start);\n  }\n  close() {\n    this.#isClosed = true;\n    removeEventListeners(this.#eventListeners);\n  }\n}","map":{"version":3,"names":["addEventListener","debugError","removeEventListeners","assert","PipeTransport","pipeWrite","eventListeners","isClosed","pendingMessage","onclose","onmessage","constructor","pipeRead","buffer","dispatch","call","send","message","write","#dispatch","end","indexOf","toString","undefined","start","close"],"sources":["/home/adityasinha/Desktop/React/topdf/node_modules/puppeteer-core/src/node/PipeTransport.ts"],"sourcesContent":["/**\n * Copyright 2018 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {ConnectionTransport} from '../common/ConnectionTransport.js';\nimport {\n  addEventListener,\n  debugError,\n  PuppeteerEventListener,\n  removeEventListeners,\n} from '../common/util.js';\nimport {assert} from '../util/assert.js';\n\n/**\n * @internal\n */\nexport class PipeTransport implements ConnectionTransport {\n  #pipeWrite: NodeJS.WritableStream;\n  #eventListeners: PuppeteerEventListener[];\n\n  #isClosed = false;\n  #pendingMessage = '';\n\n  onclose?: () => void;\n  onmessage?: (value: string) => void;\n\n  constructor(\n    pipeWrite: NodeJS.WritableStream,\n    pipeRead: NodeJS.ReadableStream\n  ) {\n    this.#pipeWrite = pipeWrite;\n    this.#eventListeners = [\n      addEventListener(pipeRead, 'data', buffer => {\n        return this.#dispatch(buffer);\n      }),\n      addEventListener(pipeRead, 'close', () => {\n        if (this.onclose) {\n          this.onclose.call(null);\n        }\n      }),\n      addEventListener(pipeRead, 'error', debugError),\n      addEventListener(pipeWrite, 'error', debugError),\n    ];\n  }\n\n  send(message: string): void {\n    assert(!this.#isClosed, '`PipeTransport` is closed.');\n\n    this.#pipeWrite.write(message);\n    this.#pipeWrite.write('\\0');\n  }\n\n  #dispatch(buffer: Buffer): void {\n    assert(!this.#isClosed, '`PipeTransport` is closed.');\n\n    let end = buffer.indexOf('\\0');\n    if (end === -1) {\n      this.#pendingMessage += buffer.toString();\n      return;\n    }\n    const message = this.#pendingMessage + buffer.toString(undefined, 0, end);\n    if (this.onmessage) {\n      this.onmessage.call(null, message);\n    }\n\n    let start = end + 1;\n    end = buffer.indexOf('\\0', start);\n    while (end !== -1) {\n      if (this.onmessage) {\n        this.onmessage.call(null, buffer.toString(undefined, start, end));\n      }\n      start = end + 1;\n      end = buffer.indexOf('\\0', start);\n    }\n    this.#pendingMessage = buffer.toString(undefined, start);\n  }\n\n  close(): void {\n    this.#isClosed = true;\n    removeEventListeners(this.#eventListeners);\n  }\n}\n"],"mappings":"AAgBA,SACEA,gBAAgB,EAChBC,UAAU,EAEVC,oBAAoB,QACf,mBAAmB;AAC1B,SAAQC,MAAM,QAAO,mBAAmB;AAExC;;;AAGA,OAAM,MAAOC,aAAa;EACxB,CAAAC,SAAU;EACV,CAAAC,cAAe;EAEf,CAAAC,QAAS,GAAG,KAAK;EACjB,CAAAC,cAAe,GAAG,EAAE;EAEpBC,OAAO;EACPC,SAAS;EAETC,YACEN,SAAgC,EAChCO,QAA+B;IAE/B,IAAI,CAAC,CAAAP,SAAU,GAAGA,SAAS;IAC3B,IAAI,CAAC,CAAAC,cAAe,GAAG,CACrBN,gBAAgB,CAACY,QAAQ,EAAE,MAAM,EAAEC,MAAM,IAAG;MAC1C,OAAO,IAAI,CAAC,CAAAC,QAAS,CAACD,MAAM,CAAC;IAC/B,CAAC,CAAC,EACFb,gBAAgB,CAACY,QAAQ,EAAE,OAAO,EAAE,MAAK;MACvC,IAAI,IAAI,CAACH,OAAO,EAAE;QAChB,IAAI,CAACA,OAAO,CAACM,IAAI,CAAC,IAAI,CAAC;;IAE3B,CAAC,CAAC,EACFf,gBAAgB,CAACY,QAAQ,EAAE,OAAO,EAAEX,UAAU,CAAC,EAC/CD,gBAAgB,CAACK,SAAS,EAAE,OAAO,EAAEJ,UAAU,CAAC,CACjD;EACH;EAEAe,IAAIA,CAACC,OAAe;IAClBd,MAAM,CAAC,CAAC,IAAI,CAAC,CAAAI,QAAS,EAAE,4BAA4B,CAAC;IAErD,IAAI,CAAC,CAAAF,SAAU,CAACa,KAAK,CAACD,OAAO,CAAC;IAC9B,IAAI,CAAC,CAAAZ,SAAU,CAACa,KAAK,CAAC,IAAI,CAAC;EAC7B;EAEA,CAAAJ,QAASK,CAACN,MAAc;IACtBV,MAAM,CAAC,CAAC,IAAI,CAAC,CAAAI,QAAS,EAAE,4BAA4B,CAAC;IAErD,IAAIa,GAAG,GAAGP,MAAM,CAACQ,OAAO,CAAC,IAAI,CAAC;IAC9B,IAAID,GAAG,KAAK,CAAC,CAAC,EAAE;MACd,IAAI,CAAC,CAAAZ,cAAe,IAAIK,MAAM,CAACS,QAAQ,EAAE;MACzC;;IAEF,MAAML,OAAO,GAAG,IAAI,CAAC,CAAAT,cAAe,GAAGK,MAAM,CAACS,QAAQ,CAACC,SAAS,EAAE,CAAC,EAAEH,GAAG,CAAC;IACzE,IAAI,IAAI,CAACV,SAAS,EAAE;MAClB,IAAI,CAACA,SAAS,CAACK,IAAI,CAAC,IAAI,EAAEE,OAAO,CAAC;;IAGpC,IAAIO,KAAK,GAAGJ,GAAG,GAAG,CAAC;IACnBA,GAAG,GAAGP,MAAM,CAACQ,OAAO,CAAC,IAAI,EAAEG,KAAK,CAAC;IACjC,OAAOJ,GAAG,KAAK,CAAC,CAAC,EAAE;MACjB,IAAI,IAAI,CAACV,SAAS,EAAE;QAClB,IAAI,CAACA,SAAS,CAACK,IAAI,CAAC,IAAI,EAAEF,MAAM,CAACS,QAAQ,CAACC,SAAS,EAAEC,KAAK,EAAEJ,GAAG,CAAC,CAAC;;MAEnEI,KAAK,GAAGJ,GAAG,GAAG,CAAC;MACfA,GAAG,GAAGP,MAAM,CAACQ,OAAO,CAAC,IAAI,EAAEG,KAAK,CAAC;;IAEnC,IAAI,CAAC,CAAAhB,cAAe,GAAGK,MAAM,CAACS,QAAQ,CAACC,SAAS,EAAEC,KAAK,CAAC;EAC1D;EAEAC,KAAKA,CAAA;IACH,IAAI,CAAC,CAAAlB,QAAS,GAAG,IAAI;IACrBL,oBAAoB,CAAC,IAAI,CAAC,CAAAI,cAAe,CAAC;EAC5C"},"metadata":{},"sourceType":"module","externalDependencies":[]}