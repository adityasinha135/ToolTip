{"ast":null,"code":"/**\n * Copyright 2019 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { assert } from '../util/assert.js';\nimport { Deferred } from '../util/Deferred.js';\nimport { CDPSessionEmittedEvents } from './Connection.js';\nimport { FrameManagerEmittedEvents } from './FrameManager.js';\nimport { NetworkManagerEmittedEvents } from './NetworkManager.js';\nimport { addEventListener, removeEventListeners } from './util.js';\nconst puppeteerToProtocolLifecycle = new Map([['load', 'load'], ['domcontentloaded', 'DOMContentLoaded'], ['networkidle0', 'networkIdle'], ['networkidle2', 'networkAlmostIdle']]);\n/**\n * @internal\n */\nexport class LifecycleWatcher {\n  #expectedLifecycle;\n  #frameManager;\n  #frame;\n  #timeout;\n  #navigationRequest = null;\n  #eventListeners;\n  #initialLoaderId;\n  #terminationDeferred;\n  #sameDocumentNavigationDeferred = Deferred.create();\n  #lifecycleDeferred = Deferred.create();\n  #newDocumentNavigationDeferred = Deferred.create();\n  #hasSameDocumentNavigation;\n  #swapped;\n  #navigationResponseReceived;\n  constructor(frameManager, frame, waitUntil, timeout) {\n    if (Array.isArray(waitUntil)) {\n      waitUntil = waitUntil.slice();\n    } else if (typeof waitUntil === 'string') {\n      waitUntil = [waitUntil];\n    }\n    this.#initialLoaderId = frame._loaderId;\n    this.#expectedLifecycle = waitUntil.map(value => {\n      const protocolEvent = puppeteerToProtocolLifecycle.get(value);\n      assert(protocolEvent, 'Unknown value for options.waitUntil: ' + value);\n      return protocolEvent;\n    });\n    this.#frameManager = frameManager;\n    this.#frame = frame;\n    this.#timeout = timeout;\n    this.#eventListeners = [addEventListener(frameManager.client, CDPSessionEmittedEvents.Disconnected, this.#terminate.bind(this, new Error('Navigation failed because browser has disconnected!'))), addEventListener(this.#frameManager, FrameManagerEmittedEvents.LifecycleEvent, this.#checkLifecycleComplete.bind(this)), addEventListener(this.#frameManager, FrameManagerEmittedEvents.FrameNavigatedWithinDocument, this.#navigatedWithinDocument.bind(this)), addEventListener(this.#frameManager, FrameManagerEmittedEvents.FrameNavigated, this.#navigated.bind(this)), addEventListener(this.#frameManager, FrameManagerEmittedEvents.FrameSwapped, this.#frameSwapped.bind(this)), addEventListener(this.#frameManager, FrameManagerEmittedEvents.FrameDetached, this.#onFrameDetached.bind(this)), addEventListener(this.#frameManager.networkManager, NetworkManagerEmittedEvents.Request, this.#onRequest.bind(this)), addEventListener(this.#frameManager.networkManager, NetworkManagerEmittedEvents.Response, this.#onResponse.bind(this)), addEventListener(this.#frameManager.networkManager, NetworkManagerEmittedEvents.RequestFailed, this.#onRequestFailed.bind(this))];\n    this.#terminationDeferred = Deferred.create({\n      timeout: this.#timeout,\n      message: `Navigation timeout of ${this.#timeout} ms exceeded`\n    });\n    this.#checkLifecycleComplete();\n  }\n  #onRequest(request) {\n    if (request.frame() !== this.#frame || !request.isNavigationRequest()) {\n      return;\n    }\n    this.#navigationRequest = request;\n    // Resolve previous navigation response in case there are multiple\n    // navigation requests reported by the backend. This generally should not\n    // happen by it looks like it's possible.\n    this.#navigationResponseReceived?.resolve();\n    this.#navigationResponseReceived = Deferred.create();\n    if (request.response() !== null) {\n      this.#navigationResponseReceived?.resolve();\n    }\n  }\n  #onRequestFailed(request) {\n    if (this.#navigationRequest?._requestId !== request._requestId) {\n      return;\n    }\n    this.#navigationResponseReceived?.resolve();\n  }\n  #onResponse(response) {\n    if (this.#navigationRequest?._requestId !== response.request()._requestId) {\n      return;\n    }\n    this.#navigationResponseReceived?.resolve();\n  }\n  #onFrameDetached(frame) {\n    if (this.#frame === frame) {\n      this.#terminationDeferred.resolve(new Error('Navigating frame was detached'));\n      return;\n    }\n    this.#checkLifecycleComplete();\n  }\n  async navigationResponse() {\n    // Continue with a possibly null response.\n    await this.#navigationResponseReceived?.valueOrThrow();\n    return this.#navigationRequest ? this.#navigationRequest.response() : null;\n  }\n  #terminate(error) {\n    this.#terminationDeferred.resolve(error);\n  }\n  sameDocumentNavigationPromise() {\n    return this.#sameDocumentNavigationDeferred.valueOrThrow();\n  }\n  newDocumentNavigationPromise() {\n    return this.#newDocumentNavigationDeferred.valueOrThrow();\n  }\n  lifecyclePromise() {\n    return this.#lifecycleDeferred.valueOrThrow();\n  }\n  terminationPromise() {\n    return this.#terminationDeferred.valueOrThrow();\n  }\n  #navigatedWithinDocument(frame) {\n    if (frame !== this.#frame) {\n      return;\n    }\n    this.#hasSameDocumentNavigation = true;\n    this.#checkLifecycleComplete();\n  }\n  #navigated(frame) {\n    if (frame !== this.#frame) {\n      return;\n    }\n    this.#checkLifecycleComplete();\n  }\n  #frameSwapped(frame) {\n    if (frame !== this.#frame) {\n      return;\n    }\n    this.#swapped = true;\n    this.#checkLifecycleComplete();\n  }\n  #checkLifecycleComplete() {\n    // We expect navigation to commit.\n    if (!checkLifecycle(this.#frame, this.#expectedLifecycle)) {\n      return;\n    }\n    this.#lifecycleDeferred.resolve();\n    if (this.#hasSameDocumentNavigation) {\n      this.#sameDocumentNavigationDeferred.resolve(undefined);\n    }\n    if (this.#swapped || this.#frame._loaderId !== this.#initialLoaderId) {\n      this.#newDocumentNavigationDeferred.resolve(undefined);\n    }\n    function checkLifecycle(frame, expectedLifecycle) {\n      for (const event of expectedLifecycle) {\n        if (!frame._lifecycleEvents.has(event)) {\n          return false;\n        }\n      }\n      for (const child of frame.childFrames()) {\n        if (child._hasStartedLoading && !checkLifecycle(child, expectedLifecycle)) {\n          return false;\n        }\n      }\n      return true;\n    }\n  }\n  dispose() {\n    removeEventListeners(this.#eventListeners);\n    this.#terminationDeferred.resolve(new Error('LifecycleWatcher disposed'));\n  }\n}","map":{"version":3,"names":["assert","Deferred","CDPSessionEmittedEvents","FrameManagerEmittedEvents","NetworkManagerEmittedEvents","addEventListener","removeEventListeners","puppeteerToProtocolLifecycle","Map","LifecycleWatcher","expectedLifecycle","frameManager","frame","timeout","navigationRequest","eventListeners","initialLoaderId","terminationDeferred","sameDocumentNavigationDeferred","create","lifecycleDeferred","newDocumentNavigationDeferred","hasSameDocumentNavigation","swapped","navigationResponseReceived","constructor","waitUntil","Array","isArray","slice","_loaderId","map","value","protocolEvent","get","client","Disconnected","terminate","bind","Error","LifecycleEvent","checkLifecycleComplete","FrameNavigatedWithinDocument","navigatedWithinDocument","FrameNavigated","navigated","FrameSwapped","frameSwapped","FrameDetached","onFrameDetached","networkManager","Request","onRequest","Response","onResponse","RequestFailed","onRequestFailed","message","#onRequest","request","isNavigationRequest","resolve","response","#onRequestFailed","_requestId","#onResponse","#onFrameDetached","navigationResponse","valueOrThrow","#terminate","error","sameDocumentNavigationPromise","newDocumentNavigationPromise","lifecyclePromise","terminationPromise","#navigatedWithinDocument","#navigated","#frameSwapped","#checkLifecycleComplete","checkLifecycle","undefined","event","_lifecycleEvents","has","child","childFrames","_hasStartedLoading","dispose"],"sources":["/home/adityasinha/Desktop/React/topdf/node_modules/puppeteer-core/src/common/LifecycleWatcher.ts"],"sourcesContent":["/**\n * Copyright 2019 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {HTTPResponse} from '../api/HTTPResponse.js';\nimport {assert} from '../util/assert.js';\nimport {Deferred} from '../util/Deferred.js';\n\nimport {CDPSessionEmittedEvents} from './Connection.js';\nimport {TimeoutError} from './Errors.js';\nimport {Frame} from './Frame.js';\nimport {FrameManager, FrameManagerEmittedEvents} from './FrameManager.js';\nimport {HTTPRequest} from './HTTPRequest.js';\nimport {NetworkManagerEmittedEvents} from './NetworkManager.js';\nimport {\n  addEventListener,\n  PuppeteerEventListener,\n  removeEventListeners,\n} from './util.js';\n/**\n * @public\n */\nexport type PuppeteerLifeCycleEvent =\n  | 'load'\n  | 'domcontentloaded'\n  | 'networkidle0'\n  | 'networkidle2';\n\n/**\n * @public\n */\nexport type ProtocolLifeCycleEvent =\n  | 'load'\n  | 'DOMContentLoaded'\n  | 'networkIdle'\n  | 'networkAlmostIdle';\n\nconst puppeteerToProtocolLifecycle = new Map<\n  PuppeteerLifeCycleEvent,\n  ProtocolLifeCycleEvent\n>([\n  ['load', 'load'],\n  ['domcontentloaded', 'DOMContentLoaded'],\n  ['networkidle0', 'networkIdle'],\n  ['networkidle2', 'networkAlmostIdle'],\n]);\n\n/**\n * @internal\n */\nexport class LifecycleWatcher {\n  #expectedLifecycle: ProtocolLifeCycleEvent[];\n  #frameManager: FrameManager;\n  #frame: Frame;\n  #timeout: number;\n  #navigationRequest: HTTPRequest | null = null;\n  #eventListeners: PuppeteerEventListener[];\n  #initialLoaderId: string;\n\n  #terminationDeferred: Deferred<Error>;\n  #sameDocumentNavigationDeferred = Deferred.create<undefined>();\n  #lifecycleDeferred = Deferred.create<void>();\n  #newDocumentNavigationDeferred = Deferred.create<undefined>();\n\n  #hasSameDocumentNavigation?: boolean;\n  #swapped?: boolean;\n\n  #navigationResponseReceived?: Deferred<void>;\n\n  constructor(\n    frameManager: FrameManager,\n    frame: Frame,\n    waitUntil: PuppeteerLifeCycleEvent | PuppeteerLifeCycleEvent[],\n    timeout: number\n  ) {\n    if (Array.isArray(waitUntil)) {\n      waitUntil = waitUntil.slice();\n    } else if (typeof waitUntil === 'string') {\n      waitUntil = [waitUntil];\n    }\n    this.#initialLoaderId = frame._loaderId;\n    this.#expectedLifecycle = waitUntil.map(value => {\n      const protocolEvent = puppeteerToProtocolLifecycle.get(value);\n      assert(protocolEvent, 'Unknown value for options.waitUntil: ' + value);\n      return protocolEvent as ProtocolLifeCycleEvent;\n    });\n\n    this.#frameManager = frameManager;\n    this.#frame = frame;\n    this.#timeout = timeout;\n    this.#eventListeners = [\n      addEventListener(\n        frameManager.client,\n        CDPSessionEmittedEvents.Disconnected,\n        this.#terminate.bind(\n          this,\n          new Error('Navigation failed because browser has disconnected!')\n        )\n      ),\n      addEventListener(\n        this.#frameManager,\n        FrameManagerEmittedEvents.LifecycleEvent,\n        this.#checkLifecycleComplete.bind(this)\n      ),\n      addEventListener(\n        this.#frameManager,\n        FrameManagerEmittedEvents.FrameNavigatedWithinDocument,\n        this.#navigatedWithinDocument.bind(this)\n      ),\n      addEventListener(\n        this.#frameManager,\n        FrameManagerEmittedEvents.FrameNavigated,\n        this.#navigated.bind(this)\n      ),\n      addEventListener(\n        this.#frameManager,\n        FrameManagerEmittedEvents.FrameSwapped,\n        this.#frameSwapped.bind(this)\n      ),\n      addEventListener(\n        this.#frameManager,\n        FrameManagerEmittedEvents.FrameDetached,\n        this.#onFrameDetached.bind(this)\n      ),\n      addEventListener(\n        this.#frameManager.networkManager,\n        NetworkManagerEmittedEvents.Request,\n        this.#onRequest.bind(this)\n      ),\n      addEventListener(\n        this.#frameManager.networkManager,\n        NetworkManagerEmittedEvents.Response,\n        this.#onResponse.bind(this)\n      ),\n      addEventListener(\n        this.#frameManager.networkManager,\n        NetworkManagerEmittedEvents.RequestFailed,\n        this.#onRequestFailed.bind(this)\n      ),\n    ];\n\n    this.#terminationDeferred = Deferred.create<Error>({\n      timeout: this.#timeout,\n      message: `Navigation timeout of ${this.#timeout} ms exceeded`,\n    });\n\n    this.#checkLifecycleComplete();\n  }\n\n  #onRequest(request: HTTPRequest): void {\n    if (request.frame() !== this.#frame || !request.isNavigationRequest()) {\n      return;\n    }\n    this.#navigationRequest = request;\n    // Resolve previous navigation response in case there are multiple\n    // navigation requests reported by the backend. This generally should not\n    // happen by it looks like it's possible.\n    this.#navigationResponseReceived?.resolve();\n    this.#navigationResponseReceived = Deferred.create();\n    if (request.response() !== null) {\n      this.#navigationResponseReceived?.resolve();\n    }\n  }\n\n  #onRequestFailed(request: HTTPRequest): void {\n    if (this.#navigationRequest?._requestId !== request._requestId) {\n      return;\n    }\n    this.#navigationResponseReceived?.resolve();\n  }\n\n  #onResponse(response: HTTPResponse): void {\n    if (this.#navigationRequest?._requestId !== response.request()._requestId) {\n      return;\n    }\n    this.#navigationResponseReceived?.resolve();\n  }\n\n  #onFrameDetached(frame: Frame): void {\n    if (this.#frame === frame) {\n      this.#terminationDeferred.resolve(\n        new Error('Navigating frame was detached')\n      );\n      return;\n    }\n    this.#checkLifecycleComplete();\n  }\n\n  async navigationResponse(): Promise<HTTPResponse | null> {\n    // Continue with a possibly null response.\n    await this.#navigationResponseReceived?.valueOrThrow();\n    return this.#navigationRequest ? this.#navigationRequest.response() : null;\n  }\n\n  #terminate(error: Error): void {\n    this.#terminationDeferred.resolve(error);\n  }\n\n  sameDocumentNavigationPromise(): Promise<Error | undefined> {\n    return this.#sameDocumentNavigationDeferred.valueOrThrow();\n  }\n\n  newDocumentNavigationPromise(): Promise<Error | undefined> {\n    return this.#newDocumentNavigationDeferred.valueOrThrow();\n  }\n\n  lifecyclePromise(): Promise<void> {\n    return this.#lifecycleDeferred.valueOrThrow();\n  }\n\n  terminationPromise(): Promise<Error | TimeoutError | undefined> {\n    return this.#terminationDeferred.valueOrThrow();\n  }\n\n  #navigatedWithinDocument(frame: Frame): void {\n    if (frame !== this.#frame) {\n      return;\n    }\n    this.#hasSameDocumentNavigation = true;\n    this.#checkLifecycleComplete();\n  }\n\n  #navigated(frame: Frame): void {\n    if (frame !== this.#frame) {\n      return;\n    }\n    this.#checkLifecycleComplete();\n  }\n\n  #frameSwapped(frame: Frame): void {\n    if (frame !== this.#frame) {\n      return;\n    }\n    this.#swapped = true;\n    this.#checkLifecycleComplete();\n  }\n\n  #checkLifecycleComplete(): void {\n    // We expect navigation to commit.\n    if (!checkLifecycle(this.#frame, this.#expectedLifecycle)) {\n      return;\n    }\n    this.#lifecycleDeferred.resolve();\n    if (this.#hasSameDocumentNavigation) {\n      this.#sameDocumentNavigationDeferred.resolve(undefined);\n    }\n    if (this.#swapped || this.#frame._loaderId !== this.#initialLoaderId) {\n      this.#newDocumentNavigationDeferred.resolve(undefined);\n    }\n\n    function checkLifecycle(\n      frame: Frame,\n      expectedLifecycle: ProtocolLifeCycleEvent[]\n    ): boolean {\n      for (const event of expectedLifecycle) {\n        if (!frame._lifecycleEvents.has(event)) {\n          return false;\n        }\n      }\n      for (const child of frame.childFrames()) {\n        if (\n          child._hasStartedLoading &&\n          !checkLifecycle(child, expectedLifecycle)\n        ) {\n          return false;\n        }\n      }\n      return true;\n    }\n  }\n\n  dispose(): void {\n    removeEventListeners(this.#eventListeners);\n    this.#terminationDeferred.resolve(new Error('LifecycleWatcher disposed'));\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}