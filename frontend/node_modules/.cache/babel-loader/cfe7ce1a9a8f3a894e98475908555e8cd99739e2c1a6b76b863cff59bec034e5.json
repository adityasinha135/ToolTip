{"ast":null,"code":"import { assert } from '../util/assert.js';\nimport { isErrorLike } from '../util/ErrorLike.js';\n/**\n * @internal\n */\nexport class EmulationManager {\n  #client;\n  #emulatingMobile = false;\n  #hasTouch = false;\n  #javascriptEnabled = true;\n  constructor(client) {\n    this.#client = client;\n  }\n  get javascriptEnabled() {\n    return this.#javascriptEnabled;\n  }\n  async emulateViewport(viewport) {\n    const mobile = viewport.isMobile || false;\n    const width = viewport.width;\n    const height = viewport.height;\n    const deviceScaleFactor = viewport.deviceScaleFactor ?? 1;\n    const screenOrientation = viewport.isLandscape ? {\n      angle: 90,\n      type: 'landscapePrimary'\n    } : {\n      angle: 0,\n      type: 'portraitPrimary'\n    };\n    const hasTouch = viewport.hasTouch || false;\n    await Promise.all([this.#client.send('Emulation.setDeviceMetricsOverride', {\n      mobile,\n      width,\n      height,\n      deviceScaleFactor,\n      screenOrientation\n    }), this.#client.send('Emulation.setTouchEmulationEnabled', {\n      enabled: hasTouch\n    })]);\n    const reloadNeeded = this.#emulatingMobile !== mobile || this.#hasTouch !== hasTouch;\n    this.#emulatingMobile = mobile;\n    this.#hasTouch = hasTouch;\n    return reloadNeeded;\n  }\n  async emulateIdleState(overrides) {\n    if (overrides) {\n      await this.#client.send('Emulation.setIdleOverride', {\n        isUserActive: overrides.isUserActive,\n        isScreenUnlocked: overrides.isScreenUnlocked\n      });\n    } else {\n      await this.#client.send('Emulation.clearIdleOverride');\n    }\n  }\n  async emulateTimezone(timezoneId) {\n    try {\n      await this.#client.send('Emulation.setTimezoneOverride', {\n        timezoneId: timezoneId || ''\n      });\n    } catch (error) {\n      if (isErrorLike(error) && error.message.includes('Invalid timezone')) {\n        throw new Error(`Invalid timezone ID: ${timezoneId}`);\n      }\n      throw error;\n    }\n  }\n  async emulateVisionDeficiency(type) {\n    const visionDeficiencies = new Set(['none', 'achromatopsia', 'blurredVision', 'deuteranopia', 'protanopia', 'tritanopia']);\n    try {\n      assert(!type || visionDeficiencies.has(type), `Unsupported vision deficiency: ${type}`);\n      await this.#client.send('Emulation.setEmulatedVisionDeficiency', {\n        type: type || 'none'\n      });\n    } catch (error) {\n      throw error;\n    }\n  }\n  async emulateCPUThrottling(factor) {\n    assert(factor === null || factor >= 1, 'Throttling rate should be greater or equal to 1');\n    await this.#client.send('Emulation.setCPUThrottlingRate', {\n      rate: factor ?? 1\n    });\n  }\n  async emulateMediaFeatures(features) {\n    if (!features) {\n      await this.#client.send('Emulation.setEmulatedMedia', {});\n    }\n    if (Array.isArray(features)) {\n      for (const mediaFeature of features) {\n        const name = mediaFeature.name;\n        assert(/^(?:prefers-(?:color-scheme|reduced-motion)|color-gamut)$/.test(name), 'Unsupported media feature: ' + name);\n      }\n      await this.#client.send('Emulation.setEmulatedMedia', {\n        features: features\n      });\n    }\n  }\n  async emulateMediaType(type) {\n    assert(type === 'screen' || type === 'print' || (type ?? undefined) === undefined, 'Unsupported media type: ' + type);\n    await this.#client.send('Emulation.setEmulatedMedia', {\n      media: type || ''\n    });\n  }\n  async setGeolocation(options) {\n    const {\n      longitude,\n      latitude,\n      accuracy = 0\n    } = options;\n    if (longitude < -180 || longitude > 180) {\n      throw new Error(`Invalid longitude \"${longitude}\": precondition -180 <= LONGITUDE <= 180 failed.`);\n    }\n    if (latitude < -90 || latitude > 90) {\n      throw new Error(`Invalid latitude \"${latitude}\": precondition -90 <= LATITUDE <= 90 failed.`);\n    }\n    if (accuracy < 0) {\n      throw new Error(`Invalid accuracy \"${accuracy}\": precondition 0 <= ACCURACY failed.`);\n    }\n    await this.#client.send('Emulation.setGeolocationOverride', {\n      longitude,\n      latitude,\n      accuracy\n    });\n  }\n  /**\n   * Resets default white background\n   */\n  async resetDefaultBackgroundColor() {\n    await this.#client.send('Emulation.setDefaultBackgroundColorOverride');\n  }\n  /**\n   * Hides default white background\n   */\n  async setTransparentBackgroundColor() {\n    await this.#client.send('Emulation.setDefaultBackgroundColorOverride', {\n      color: {\n        r: 0,\n        g: 0,\n        b: 0,\n        a: 0\n      }\n    });\n  }\n  async setJavaScriptEnabled(enabled) {\n    if (this.#javascriptEnabled === enabled) {\n      return;\n    }\n    this.#javascriptEnabled = enabled;\n    await this.#client.send('Emulation.setScriptExecutionDisabled', {\n      value: !enabled\n    });\n  }\n}","map":{"version":3,"names":["assert","isErrorLike","EmulationManager","client","emulatingMobile","hasTouch","javascriptEnabled","constructor","emulateViewport","viewport","mobile","isMobile","width","height","deviceScaleFactor","screenOrientation","isLandscape","angle","type","Promise","all","send","enabled","reloadNeeded","emulateIdleState","overrides","isUserActive","isScreenUnlocked","emulateTimezone","timezoneId","error","message","includes","Error","emulateVisionDeficiency","visionDeficiencies","Set","has","emulateCPUThrottling","factor","rate","emulateMediaFeatures","features","Array","isArray","mediaFeature","name","test","emulateMediaType","undefined","media","setGeolocation","options","longitude","latitude","accuracy","resetDefaultBackgroundColor","setTransparentBackgroundColor","color","r","g","b","a","setJavaScriptEnabled","value"],"sources":["/home/adityasinha/Desktop/React/topdf/node_modules/puppeteer-core/src/common/EmulationManager.ts"],"sourcesContent":["/**\n * Copyright 2017 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {Protocol} from 'devtools-protocol';\n\nimport {GeolocationOptions, MediaFeature} from '../api/Page.js';\nimport {assert} from '../util/assert.js';\nimport {isErrorLike} from '../util/ErrorLike.js';\n\nimport {CDPSession} from './Connection.js';\nimport {Viewport} from './PuppeteerViewport.js';\n\n/**\n * @internal\n */\nexport class EmulationManager {\n  #client: CDPSession;\n  #emulatingMobile = false;\n  #hasTouch = false;\n  #javascriptEnabled = true;\n\n  constructor(client: CDPSession) {\n    this.#client = client;\n  }\n\n  get javascriptEnabled(): boolean {\n    return this.#javascriptEnabled;\n  }\n\n  async emulateViewport(viewport: Viewport): Promise<boolean> {\n    const mobile = viewport.isMobile || false;\n    const width = viewport.width;\n    const height = viewport.height;\n    const deviceScaleFactor = viewport.deviceScaleFactor ?? 1;\n    const screenOrientation: Protocol.Emulation.ScreenOrientation =\n      viewport.isLandscape\n        ? {angle: 90, type: 'landscapePrimary'}\n        : {angle: 0, type: 'portraitPrimary'};\n    const hasTouch = viewport.hasTouch || false;\n\n    await Promise.all([\n      this.#client.send('Emulation.setDeviceMetricsOverride', {\n        mobile,\n        width,\n        height,\n        deviceScaleFactor,\n        screenOrientation,\n      }),\n      this.#client.send('Emulation.setTouchEmulationEnabled', {\n        enabled: hasTouch,\n      }),\n    ]);\n\n    const reloadNeeded =\n      this.#emulatingMobile !== mobile || this.#hasTouch !== hasTouch;\n    this.#emulatingMobile = mobile;\n    this.#hasTouch = hasTouch;\n    return reloadNeeded;\n  }\n\n  async emulateIdleState(overrides?: {\n    isUserActive: boolean;\n    isScreenUnlocked: boolean;\n  }): Promise<void> {\n    if (overrides) {\n      await this.#client.send('Emulation.setIdleOverride', {\n        isUserActive: overrides.isUserActive,\n        isScreenUnlocked: overrides.isScreenUnlocked,\n      });\n    } else {\n      await this.#client.send('Emulation.clearIdleOverride');\n    }\n  }\n\n  async emulateTimezone(timezoneId?: string): Promise<void> {\n    try {\n      await this.#client.send('Emulation.setTimezoneOverride', {\n        timezoneId: timezoneId || '',\n      });\n    } catch (error) {\n      if (isErrorLike(error) && error.message.includes('Invalid timezone')) {\n        throw new Error(`Invalid timezone ID: ${timezoneId}`);\n      }\n      throw error;\n    }\n  }\n\n  async emulateVisionDeficiency(\n    type?: Protocol.Emulation.SetEmulatedVisionDeficiencyRequest['type']\n  ): Promise<void> {\n    const visionDeficiencies = new Set<\n      Protocol.Emulation.SetEmulatedVisionDeficiencyRequest['type']\n    >([\n      'none',\n      'achromatopsia',\n      'blurredVision',\n      'deuteranopia',\n      'protanopia',\n      'tritanopia',\n    ]);\n    try {\n      assert(\n        !type || visionDeficiencies.has(type),\n        `Unsupported vision deficiency: ${type}`\n      );\n      await this.#client.send('Emulation.setEmulatedVisionDeficiency', {\n        type: type || 'none',\n      });\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  async emulateCPUThrottling(factor: number | null): Promise<void> {\n    assert(\n      factor === null || factor >= 1,\n      'Throttling rate should be greater or equal to 1'\n    );\n    await this.#client.send('Emulation.setCPUThrottlingRate', {\n      rate: factor ?? 1,\n    });\n  }\n\n  async emulateMediaFeatures(features?: MediaFeature[]): Promise<void> {\n    if (!features) {\n      await this.#client.send('Emulation.setEmulatedMedia', {});\n    }\n    if (Array.isArray(features)) {\n      for (const mediaFeature of features) {\n        const name = mediaFeature.name;\n        assert(\n          /^(?:prefers-(?:color-scheme|reduced-motion)|color-gamut)$/.test(\n            name\n          ),\n          'Unsupported media feature: ' + name\n        );\n      }\n      await this.#client.send('Emulation.setEmulatedMedia', {\n        features: features,\n      });\n    }\n  }\n\n  async emulateMediaType(type?: string): Promise<void> {\n    assert(\n      type === 'screen' ||\n        type === 'print' ||\n        (type ?? undefined) === undefined,\n      'Unsupported media type: ' + type\n    );\n    await this.#client.send('Emulation.setEmulatedMedia', {\n      media: type || '',\n    });\n  }\n\n  async setGeolocation(options: GeolocationOptions): Promise<void> {\n    const {longitude, latitude, accuracy = 0} = options;\n    if (longitude < -180 || longitude > 180) {\n      throw new Error(\n        `Invalid longitude \"${longitude}\": precondition -180 <= LONGITUDE <= 180 failed.`\n      );\n    }\n    if (latitude < -90 || latitude > 90) {\n      throw new Error(\n        `Invalid latitude \"${latitude}\": precondition -90 <= LATITUDE <= 90 failed.`\n      );\n    }\n    if (accuracy < 0) {\n      throw new Error(\n        `Invalid accuracy \"${accuracy}\": precondition 0 <= ACCURACY failed.`\n      );\n    }\n    await this.#client.send('Emulation.setGeolocationOverride', {\n      longitude,\n      latitude,\n      accuracy,\n    });\n  }\n\n  /**\n   * Resets default white background\n   */\n  async resetDefaultBackgroundColor(): Promise<void> {\n    await this.#client.send('Emulation.setDefaultBackgroundColorOverride');\n  }\n\n  /**\n   * Hides default white background\n   */\n  async setTransparentBackgroundColor(): Promise<void> {\n    await this.#client.send('Emulation.setDefaultBackgroundColorOverride', {\n      color: {r: 0, g: 0, b: 0, a: 0},\n    });\n  }\n\n  async setJavaScriptEnabled(enabled: boolean): Promise<void> {\n    if (this.#javascriptEnabled === enabled) {\n      return;\n    }\n    this.#javascriptEnabled = enabled;\n    await this.#client.send('Emulation.setScriptExecutionDisabled', {\n      value: !enabled,\n    });\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}