{"ast":null,"code":"/**\n * Copyright 2017 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { EventEmitter } from '../common/EventEmitter.js';\nimport { waitWithTimeout } from '../common/util.js';\nimport { Deferred } from '../util/Deferred.js';\n/**\n * @internal\n */\nexport const WEB_PERMISSION_TO_PROTOCOL_PERMISSION = new Map([['geolocation', 'geolocation'], ['midi', 'midi'], ['notifications', 'notifications'],\n// TODO: push isn't a valid type?\n// ['push', 'push'],\n['camera', 'videoCapture'], ['microphone', 'audioCapture'], ['background-sync', 'backgroundSync'], ['ambient-light-sensor', 'sensors'], ['accelerometer', 'sensors'], ['gyroscope', 'sensors'], ['magnetometer', 'sensors'], ['accessibility-events', 'accessibilityEvents'], ['clipboard-read', 'clipboardReadWrite'], ['clipboard-write', 'clipboardReadWrite'], ['clipboard-sanitized-write', 'clipboardSanitizedWrite'], ['payment-handler', 'paymentHandler'], ['persistent-storage', 'durableStorage'], ['idle-detection', 'idleDetection'],\n// chrome-specific permissions we have.\n['midi-sysex', 'midiSysex']]);\n/**\n * A Browser is created when Puppeteer connects to a browser instance, either through\n * {@link PuppeteerNode.launch} or {@link Puppeteer.connect}.\n *\n * @remarks\n *\n * The Browser class extends from Puppeteer's {@link EventEmitter} class and will\n * emit various events which are documented in the {@link BrowserEmittedEvents} enum.\n *\n * @example\n * An example of using a {@link Browser} to create a {@link Page}:\n *\n * ```ts\n * import puppeteer from 'puppeteer';\n *\n * (async () => {\n *   const browser = await puppeteer.launch();\n *   const page = await browser.newPage();\n *   await page.goto('https://example.com');\n *   await browser.close();\n * })();\n * ```\n *\n * @example\n * An example of disconnecting from and reconnecting to a {@link Browser}:\n *\n * ```ts\n * import puppeteer from 'puppeteer';\n *\n * (async () => {\n *   const browser = await puppeteer.launch();\n *   // Store the endpoint to be able to reconnect to the browser.\n *   const browserWSEndpoint = browser.wsEndpoint();\n *   // Disconnect puppeteer from the browser.\n *   browser.disconnect();\n *\n *   // Use the endpoint to reestablish a connection\n *   const browser2 = await puppeteer.connect({browserWSEndpoint});\n *   // Close the browser.\n *   await browser2.close();\n * })();\n * ```\n *\n * @public\n */\nexport class Browser extends EventEmitter {\n  /**\n   * @internal\n   */\n  constructor() {\n    super();\n  }\n  /**\n   * @internal\n   */\n  _attach() {\n    throw new Error('Not implemented');\n  }\n  /**\n   * @internal\n   */\n  _detach() {\n    throw new Error('Not implemented');\n  }\n  /**\n   * @internal\n   */\n  get _targets() {\n    throw new Error('Not implemented');\n  }\n  /**\n   * The spawned browser process. Returns `null` if the browser instance was created with\n   * {@link Puppeteer.connect}.\n   */\n  process() {\n    throw new Error('Not implemented');\n  }\n  /**\n   * @internal\n   */\n  _getIsPageTargetCallback() {\n    throw new Error('Not implemented');\n  }\n  createIncognitoBrowserContext() {\n    throw new Error('Not implemented');\n  }\n  /**\n   * Returns an array of all open browser contexts. In a newly created browser, this will\n   * return a single instance of {@link BrowserContext}.\n   */\n  browserContexts() {\n    throw new Error('Not implemented');\n  }\n  /**\n   * Returns the default browser context. The default browser context cannot be closed.\n   */\n  defaultBrowserContext() {\n    throw new Error('Not implemented');\n  }\n  _disposeContext() {\n    throw new Error('Not implemented');\n  }\n  /**\n   * The browser websocket endpoint which can be used as an argument to\n   * {@link Puppeteer.connect}.\n   *\n   * @returns The Browser websocket url.\n   *\n   * @remarks\n   *\n   * The format is `ws://${host}:${port}/devtools/browser/<id>`.\n   *\n   * You can find the `webSocketDebuggerUrl` from `http://${host}:${port}/json/version`.\n   * Learn more about the\n   * {@link https://chromedevtools.github.io/devtools-protocol | devtools protocol} and\n   * the {@link\n   * https://chromedevtools.github.io/devtools-protocol/#how-do-i-access-the-browser-target\n   * | browser endpoint}.\n   */\n  wsEndpoint() {\n    throw new Error('Not implemented');\n  }\n  /**\n   * Promise which resolves to a new {@link Page} object. The Page is created in\n   * a default browser context.\n   */\n  newPage() {\n    throw new Error('Not implemented');\n  }\n  _createPageInContext() {\n    throw new Error('Not implemented');\n  }\n  /**\n   * All active targets inside the Browser. In case of multiple browser contexts, returns\n   * an array with all the targets in all browser contexts.\n   */\n  targets() {\n    throw new Error('Not implemented');\n  }\n  /**\n   * The target associated with the browser.\n   */\n  target() {\n    throw new Error('Not implemented');\n  }\n  /**\n   * Searches for a target in all browser contexts.\n   *\n   * @param predicate - A function to be run for every target.\n   * @returns The first target found that matches the `predicate` function.\n   *\n   * @example\n   *\n   * An example of finding a target for a page opened via `window.open`:\n   *\n   * ```ts\n   * await page.evaluate(() => window.open('https://www.example.com/'));\n   * const newWindowTarget = await browser.waitForTarget(\n   *   target => target.url() === 'https://www.example.com/'\n   * );\n   * ```\n   */\n  async waitForTarget(predicate, options = {}) {\n    const {\n      timeout = 30000\n    } = options;\n    const targetDeferred = Deferred.create();\n    this.on(\"targetcreated\" /* BrowserEmittedEvents.TargetCreated */, check);\n    this.on(\"targetchanged\" /* BrowserEmittedEvents.TargetChanged */, check);\n    try {\n      this.targets().forEach(check);\n      if (!timeout) {\n        return await targetDeferred.valueOrThrow();\n      }\n      return await waitWithTimeout(targetDeferred.valueOrThrow(), 'target', timeout);\n    } finally {\n      this.off(\"targetcreated\" /* BrowserEmittedEvents.TargetCreated */, check);\n      this.off(\"targetchanged\" /* BrowserEmittedEvents.TargetChanged */, check);\n    }\n    async function check(target) {\n      if ((await predicate(target)) && !targetDeferred.resolved()) {\n        targetDeferred.resolve(target);\n      }\n    }\n  }\n  /**\n   * An array of all open pages inside the Browser.\n   *\n   * @remarks\n   *\n   * In case of multiple browser contexts, returns an array with all the pages in all\n   * browser contexts. Non-visible pages, such as `\"background_page\"`, will not be listed\n   * here. You can find them using {@link Target.page}.\n   */\n  async pages() {\n    const contextPages = await Promise.all(this.browserContexts().map(context => {\n      return context.pages();\n    }));\n    // Flatten array.\n    return contextPages.reduce((acc, x) => {\n      return acc.concat(x);\n    }, []);\n  }\n  /**\n   * A string representing the browser name and version.\n   *\n   * @remarks\n   *\n   * For headless browser, this is similar to `HeadlessChrome/61.0.3153.0`. For\n   * non-headless or new-headless, this is similar to `Chrome/61.0.3153.0`. For\n   * Firefox, it is similar to `Firefox/116.0a1`.\n   *\n   * The format of browser.version() might change with future releases of\n   * browsers.\n   */\n  version() {\n    throw new Error('Not implemented');\n  }\n  /**\n   * The browser's original user agent. Pages can override the browser user agent with\n   * {@link Page.setUserAgent}.\n   */\n  userAgent() {\n    throw new Error('Not implemented');\n  }\n  /**\n   * Closes the browser and all of its pages (if any were opened). The\n   * {@link Browser} object itself is considered to be disposed and cannot be\n   * used anymore.\n   */\n  close() {\n    throw new Error('Not implemented');\n  }\n  /**\n   * Disconnects Puppeteer from the browser, but leaves the browser process running.\n   * After calling `disconnect`, the {@link Browser} object is considered disposed and\n   * cannot be used anymore.\n   */\n  disconnect() {\n    throw new Error('Not implemented');\n  }\n  /**\n   * Indicates that the browser is connected.\n   */\n  isConnected() {\n    throw new Error('Not implemented');\n  }\n}","map":{"version":3,"names":["EventEmitter","waitWithTimeout","Deferred","WEB_PERMISSION_TO_PROTOCOL_PERMISSION","Map","Browser","constructor","_attach","Error","_detach","_targets","process","_getIsPageTargetCallback","createIncognitoBrowserContext","browserContexts","defaultBrowserContext","_disposeContext","wsEndpoint","newPage","_createPageInContext","targets","target","waitForTarget","predicate","options","timeout","targetDeferred","create","on","check","forEach","valueOrThrow","off","resolved","resolve","pages","contextPages","Promise","all","map","context","reduce","acc","x","concat","version","userAgent","close","disconnect","isConnected"],"sources":["/home/adityasinha/Desktop/React/topdf/node_modules/puppeteer-core/src/api/Browser.ts"],"sourcesContent":["/**\n * Copyright 2017 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint-disable @typescript-eslint/no-unused-vars */\n\nimport {ChildProcess} from 'child_process';\n\nimport {Protocol} from 'devtools-protocol';\n\nimport {EventEmitter} from '../common/EventEmitter.js';\nimport {waitWithTimeout} from '../common/util.js';\nimport {Deferred} from '../util/Deferred.js';\n\nimport type {BrowserContext} from './BrowserContext.js';\nimport type {Page} from './Page.js';\nimport type {Target} from './Target.js';\n\n/**\n * BrowserContext options.\n *\n * @public\n */\nexport interface BrowserContextOptions {\n  /**\n   * Proxy server with optional port to use for all requests.\n   * Username and password can be set in `Page.authenticate`.\n   */\n  proxyServer?: string;\n  /**\n   * Bypass the proxy for the given list of hosts.\n   */\n  proxyBypassList?: string[];\n}\n\n/**\n * @internal\n */\nexport type BrowserCloseCallback = () => Promise<void> | void;\n\n/**\n * @public\n */\nexport type TargetFilterCallback = (target: Target) => boolean;\n\n/**\n * @internal\n */\nexport type IsPageTargetCallback = (target: Target) => boolean;\n\n/**\n * @internal\n */\nexport const WEB_PERMISSION_TO_PROTOCOL_PERMISSION = new Map<\n  Permission,\n  Protocol.Browser.PermissionType\n>([\n  ['geolocation', 'geolocation'],\n  ['midi', 'midi'],\n  ['notifications', 'notifications'],\n  // TODO: push isn't a valid type?\n  // ['push', 'push'],\n  ['camera', 'videoCapture'],\n  ['microphone', 'audioCapture'],\n  ['background-sync', 'backgroundSync'],\n  ['ambient-light-sensor', 'sensors'],\n  ['accelerometer', 'sensors'],\n  ['gyroscope', 'sensors'],\n  ['magnetometer', 'sensors'],\n  ['accessibility-events', 'accessibilityEvents'],\n  ['clipboard-read', 'clipboardReadWrite'],\n  ['clipboard-write', 'clipboardReadWrite'],\n  ['clipboard-sanitized-write', 'clipboardSanitizedWrite'],\n  ['payment-handler', 'paymentHandler'],\n  ['persistent-storage', 'durableStorage'],\n  ['idle-detection', 'idleDetection'],\n  // chrome-specific permissions we have.\n  ['midi-sysex', 'midiSysex'],\n]);\n\n/**\n * @public\n */\nexport type Permission =\n  | 'geolocation'\n  | 'midi'\n  | 'notifications'\n  | 'camera'\n  | 'microphone'\n  | 'background-sync'\n  | 'ambient-light-sensor'\n  | 'accelerometer'\n  | 'gyroscope'\n  | 'magnetometer'\n  | 'accessibility-events'\n  | 'clipboard-read'\n  | 'clipboard-write'\n  | 'clipboard-sanitized-write'\n  | 'payment-handler'\n  | 'persistent-storage'\n  | 'idle-detection'\n  | 'midi-sysex';\n\n/**\n * @public\n */\nexport interface WaitForTargetOptions {\n  /**\n   * Maximum wait time in milliseconds. Pass `0` to disable the timeout.\n   * @defaultValue `30_000`\n   */\n  timeout?: number;\n}\n\n/**\n * All the events a {@link Browser | browser instance} may emit.\n *\n * @public\n */\nexport const enum BrowserEmittedEvents {\n  /**\n   * Emitted when Puppeteer gets disconnected from the browser instance. This\n   * might happen because of one of the following:\n   *\n   * - browser is closed or crashed\n   *\n   * - The {@link Browser.disconnect | browser.disconnect } method was called.\n   */\n  Disconnected = 'disconnected',\n\n  /**\n   * Emitted when the url of a target changes. Contains a {@link Target} instance.\n   *\n   * @remarks\n   *\n   * Note that this includes target changes in incognito browser contexts.\n   */\n  TargetChanged = 'targetchanged',\n\n  /**\n   * Emitted when a target is created, for example when a new page is opened by\n   * {@link https://developer.mozilla.org/en-US/docs/Web/API/Window/open | window.open}\n   * or by {@link Browser.newPage | browser.newPage}\n   *\n   * Contains a {@link Target} instance.\n   *\n   * @remarks\n   *\n   * Note that this includes target creations in incognito browser contexts.\n   */\n  TargetCreated = 'targetcreated',\n  /**\n   * Emitted when a target is destroyed, for example when a page is closed.\n   * Contains a {@link Target} instance.\n   *\n   * @remarks\n   *\n   * Note that this includes target destructions in incognito browser contexts.\n   */\n  TargetDestroyed = 'targetdestroyed',\n}\n\n/**\n * A Browser is created when Puppeteer connects to a browser instance, either through\n * {@link PuppeteerNode.launch} or {@link Puppeteer.connect}.\n *\n * @remarks\n *\n * The Browser class extends from Puppeteer's {@link EventEmitter} class and will\n * emit various events which are documented in the {@link BrowserEmittedEvents} enum.\n *\n * @example\n * An example of using a {@link Browser} to create a {@link Page}:\n *\n * ```ts\n * import puppeteer from 'puppeteer';\n *\n * (async () => {\n *   const browser = await puppeteer.launch();\n *   const page = await browser.newPage();\n *   await page.goto('https://example.com');\n *   await browser.close();\n * })();\n * ```\n *\n * @example\n * An example of disconnecting from and reconnecting to a {@link Browser}:\n *\n * ```ts\n * import puppeteer from 'puppeteer';\n *\n * (async () => {\n *   const browser = await puppeteer.launch();\n *   // Store the endpoint to be able to reconnect to the browser.\n *   const browserWSEndpoint = browser.wsEndpoint();\n *   // Disconnect puppeteer from the browser.\n *   browser.disconnect();\n *\n *   // Use the endpoint to reestablish a connection\n *   const browser2 = await puppeteer.connect({browserWSEndpoint});\n *   // Close the browser.\n *   await browser2.close();\n * })();\n * ```\n *\n * @public\n */\nexport class Browser extends EventEmitter {\n  /**\n   * @internal\n   */\n  constructor() {\n    super();\n  }\n\n  /**\n   * @internal\n   */\n  _attach(): Promise<void> {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * @internal\n   */\n  _detach(): void {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * @internal\n   */\n  get _targets(): Map<string, Target> {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * The spawned browser process. Returns `null` if the browser instance was created with\n   * {@link Puppeteer.connect}.\n   */\n  process(): ChildProcess | null {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * @internal\n   */\n  _getIsPageTargetCallback(): IsPageTargetCallback | undefined {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * Creates a new incognito browser context. This won't share cookies/cache with other\n   * browser contexts.\n   *\n   * @example\n   *\n   * ```ts\n   * (async () => {\n   *   const browser = await puppeteer.launch();\n   *   // Create a new incognito browser context.\n   *   const context = await browser.createIncognitoBrowserContext();\n   *   // Create a new page in a pristine context.\n   *   const page = await context.newPage();\n   *   // Do stuff\n   *   await page.goto('https://example.com');\n   * })();\n   * ```\n   */\n  createIncognitoBrowserContext(\n    options?: BrowserContextOptions\n  ): Promise<BrowserContext>;\n  createIncognitoBrowserContext(): Promise<BrowserContext> {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * Returns an array of all open browser contexts. In a newly created browser, this will\n   * return a single instance of {@link BrowserContext}.\n   */\n  browserContexts(): BrowserContext[] {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * Returns the default browser context. The default browser context cannot be closed.\n   */\n  defaultBrowserContext(): BrowserContext {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * @internal\n   */\n  _disposeContext(contextId?: string): Promise<void>;\n  _disposeContext(): Promise<void> {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * The browser websocket endpoint which can be used as an argument to\n   * {@link Puppeteer.connect}.\n   *\n   * @returns The Browser websocket url.\n   *\n   * @remarks\n   *\n   * The format is `ws://${host}:${port}/devtools/browser/<id>`.\n   *\n   * You can find the `webSocketDebuggerUrl` from `http://${host}:${port}/json/version`.\n   * Learn more about the\n   * {@link https://chromedevtools.github.io/devtools-protocol | devtools protocol} and\n   * the {@link\n   * https://chromedevtools.github.io/devtools-protocol/#how-do-i-access-the-browser-target\n   * | browser endpoint}.\n   */\n  wsEndpoint(): string {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * Promise which resolves to a new {@link Page} object. The Page is created in\n   * a default browser context.\n   */\n  newPage(): Promise<Page> {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * @internal\n   */\n  _createPageInContext(contextId?: string): Promise<Page>;\n  _createPageInContext(): Promise<Page> {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * All active targets inside the Browser. In case of multiple browser contexts, returns\n   * an array with all the targets in all browser contexts.\n   */\n  targets(): Target[] {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * The target associated with the browser.\n   */\n  target(): Target {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * Searches for a target in all browser contexts.\n   *\n   * @param predicate - A function to be run for every target.\n   * @returns The first target found that matches the `predicate` function.\n   *\n   * @example\n   *\n   * An example of finding a target for a page opened via `window.open`:\n   *\n   * ```ts\n   * await page.evaluate(() => window.open('https://www.example.com/'));\n   * const newWindowTarget = await browser.waitForTarget(\n   *   target => target.url() === 'https://www.example.com/'\n   * );\n   * ```\n   */\n  async waitForTarget(\n    predicate: (x: Target) => boolean | Promise<boolean>,\n    options: WaitForTargetOptions = {}\n  ): Promise<Target> {\n    const {timeout = 30000} = options;\n    const targetDeferred = Deferred.create<Target | PromiseLike<Target>>();\n\n    this.on(BrowserEmittedEvents.TargetCreated, check);\n    this.on(BrowserEmittedEvents.TargetChanged, check);\n    try {\n      this.targets().forEach(check);\n      if (!timeout) {\n        return await targetDeferred.valueOrThrow();\n      }\n      return await waitWithTimeout(\n        targetDeferred.valueOrThrow(),\n        'target',\n        timeout\n      );\n    } finally {\n      this.off(BrowserEmittedEvents.TargetCreated, check);\n      this.off(BrowserEmittedEvents.TargetChanged, check);\n    }\n\n    async function check(target: Target): Promise<void> {\n      if ((await predicate(target)) && !targetDeferred.resolved()) {\n        targetDeferred.resolve(target);\n      }\n    }\n  }\n\n  /**\n   * An array of all open pages inside the Browser.\n   *\n   * @remarks\n   *\n   * In case of multiple browser contexts, returns an array with all the pages in all\n   * browser contexts. Non-visible pages, such as `\"background_page\"`, will not be listed\n   * here. You can find them using {@link Target.page}.\n   */\n  async pages(): Promise<Page[]> {\n    const contextPages = await Promise.all(\n      this.browserContexts().map(context => {\n        return context.pages();\n      })\n    );\n    // Flatten array.\n    return contextPages.reduce((acc, x) => {\n      return acc.concat(x);\n    }, []);\n  }\n\n  /**\n   * A string representing the browser name and version.\n   *\n   * @remarks\n   *\n   * For headless browser, this is similar to `HeadlessChrome/61.0.3153.0`. For\n   * non-headless or new-headless, this is similar to `Chrome/61.0.3153.0`. For\n   * Firefox, it is similar to `Firefox/116.0a1`.\n   *\n   * The format of browser.version() might change with future releases of\n   * browsers.\n   */\n  version(): Promise<string> {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * The browser's original user agent. Pages can override the browser user agent with\n   * {@link Page.setUserAgent}.\n   */\n  userAgent(): Promise<string> {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * Closes the browser and all of its pages (if any were opened). The\n   * {@link Browser} object itself is considered to be disposed and cannot be\n   * used anymore.\n   */\n  close(): Promise<void> {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * Disconnects Puppeteer from the browser, but leaves the browser process running.\n   * After calling `disconnect`, the {@link Browser} object is considered disposed and\n   * cannot be used anymore.\n   */\n  disconnect(): void {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * Indicates that the browser is connected.\n   */\n  isConnected(): boolean {\n    throw new Error('Not implemented');\n  }\n}\n/**\n * @public\n */\nexport const enum BrowserContextEmittedEvents {\n  /**\n   * Emitted when the url of a target inside the browser context changes.\n   * Contains a {@link Target} instance.\n   */\n  TargetChanged = 'targetchanged',\n\n  /**\n   * Emitted when a target is created within the browser context, for example\n   * when a new page is opened by\n   * {@link https://developer.mozilla.org/en-US/docs/Web/API/Window/open | window.open}\n   * or by {@link BrowserContext.newPage | browserContext.newPage}\n   *\n   * Contains a {@link Target} instance.\n   */\n  TargetCreated = 'targetcreated',\n  /**\n   * Emitted when a target is destroyed within the browser context, for example\n   * when a page is closed. Contains a {@link Target} instance.\n   */\n  TargetDestroyed = 'targetdestroyed',\n}\n"],"mappings":"AAAA;;;;;;;;;;;;;;;AAsBA,SAAQA,YAAY,QAAO,2BAA2B;AACtD,SAAQC,eAAe,QAAO,mBAAmB;AACjD,SAAQC,QAAQ,QAAO,qBAAqB;AAsC5C;;;AAGA,OAAO,MAAMC,qCAAqC,GAAG,IAAIC,GAAG,CAG1D,CACA,CAAC,aAAa,EAAE,aAAa,CAAC,EAC9B,CAAC,MAAM,EAAE,MAAM,CAAC,EAChB,CAAC,eAAe,EAAE,eAAe,CAAC;AAClC;AACA;AACA,CAAC,QAAQ,EAAE,cAAc,CAAC,EAC1B,CAAC,YAAY,EAAE,cAAc,CAAC,EAC9B,CAAC,iBAAiB,EAAE,gBAAgB,CAAC,EACrC,CAAC,sBAAsB,EAAE,SAAS,CAAC,EACnC,CAAC,eAAe,EAAE,SAAS,CAAC,EAC5B,CAAC,WAAW,EAAE,SAAS,CAAC,EACxB,CAAC,cAAc,EAAE,SAAS,CAAC,EAC3B,CAAC,sBAAsB,EAAE,qBAAqB,CAAC,EAC/C,CAAC,gBAAgB,EAAE,oBAAoB,CAAC,EACxC,CAAC,iBAAiB,EAAE,oBAAoB,CAAC,EACzC,CAAC,2BAA2B,EAAE,yBAAyB,CAAC,EACxD,CAAC,iBAAiB,EAAE,gBAAgB,CAAC,EACrC,CAAC,oBAAoB,EAAE,gBAAgB,CAAC,EACxC,CAAC,gBAAgB,EAAE,eAAe,CAAC;AACnC;AACA,CAAC,YAAY,EAAE,WAAW,CAAC,CAC5B,CAAC;AAoFF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6CA,OAAM,MAAOC,OAAQ,SAAQL,YAAY;EACvC;;;EAGAM,YAAA;IACE,KAAK,EAAE;EACT;EAEA;;;EAGAC,OAAOA,CAAA;IACL,MAAM,IAAIC,KAAK,CAAC,iBAAiB,CAAC;EACpC;EAEA;;;EAGAC,OAAOA,CAAA;IACL,MAAM,IAAID,KAAK,CAAC,iBAAiB,CAAC;EACpC;EAEA;;;EAGA,IAAIE,QAAQA,CAAA;IACV,MAAM,IAAIF,KAAK,CAAC,iBAAiB,CAAC;EACpC;EAEA;;;;EAIAG,OAAOA,CAAA;IACL,MAAM,IAAIH,KAAK,CAAC,iBAAiB,CAAC;EACpC;EAEA;;;EAGAI,wBAAwBA,CAAA;IACtB,MAAM,IAAIJ,KAAK,CAAC,iBAAiB,CAAC;EACpC;EAuBAK,6BAA6BA,CAAA;IAC3B,MAAM,IAAIL,KAAK,CAAC,iBAAiB,CAAC;EACpC;EAEA;;;;EAIAM,eAAeA,CAAA;IACb,MAAM,IAAIN,KAAK,CAAC,iBAAiB,CAAC;EACpC;EAEA;;;EAGAO,qBAAqBA,CAAA;IACnB,MAAM,IAAIP,KAAK,CAAC,iBAAiB,CAAC;EACpC;EAMAQ,eAAeA,CAAA;IACb,MAAM,IAAIR,KAAK,CAAC,iBAAiB,CAAC;EACpC;EAEA;;;;;;;;;;;;;;;;;EAiBAS,UAAUA,CAAA;IACR,MAAM,IAAIT,KAAK,CAAC,iBAAiB,CAAC;EACpC;EAEA;;;;EAIAU,OAAOA,CAAA;IACL,MAAM,IAAIV,KAAK,CAAC,iBAAiB,CAAC;EACpC;EAMAW,oBAAoBA,CAAA;IAClB,MAAM,IAAIX,KAAK,CAAC,iBAAiB,CAAC;EACpC;EAEA;;;;EAIAY,OAAOA,CAAA;IACL,MAAM,IAAIZ,KAAK,CAAC,iBAAiB,CAAC;EACpC;EAEA;;;EAGAa,MAAMA,CAAA;IACJ,MAAM,IAAIb,KAAK,CAAC,iBAAiB,CAAC;EACpC;EAEA;;;;;;;;;;;;;;;;;EAiBA,MAAMc,aAAaA,CACjBC,SAAoD,EACpDC,OAAA,GAAgC,EAAE;IAElC,MAAM;MAACC,OAAO,GAAG;IAAK,CAAC,GAAGD,OAAO;IACjC,MAAME,cAAc,GAAGxB,QAAQ,CAACyB,MAAM,EAAgC;IAEtE,IAAI,CAACC,EAAE,2DAAqCC,KAAK,CAAC;IAClD,IAAI,CAACD,EAAE,2DAAqCC,KAAK,CAAC;IAClD,IAAI;MACF,IAAI,CAACT,OAAO,EAAE,CAACU,OAAO,CAACD,KAAK,CAAC;MAC7B,IAAI,CAACJ,OAAO,EAAE;QACZ,OAAO,MAAMC,cAAc,CAACK,YAAY,EAAE;;MAE5C,OAAO,MAAM9B,eAAe,CAC1ByB,cAAc,CAACK,YAAY,EAAE,EAC7B,QAAQ,EACRN,OAAO,CACR;KACF,SAAS;MACR,IAAI,CAACO,GAAG,2DAAqCH,KAAK,CAAC;MACnD,IAAI,CAACG,GAAG,2DAAqCH,KAAK,CAAC;;IAGrD,eAAeA,KAAKA,CAACR,MAAc;MACjC,IAAI,CAAC,MAAME,SAAS,CAACF,MAAM,CAAC,KAAK,CAACK,cAAc,CAACO,QAAQ,EAAE,EAAE;QAC3DP,cAAc,CAACQ,OAAO,CAACb,MAAM,CAAC;;IAElC;EACF;EAEA;;;;;;;;;EASA,MAAMc,KAAKA,CAAA;IACT,MAAMC,YAAY,GAAG,MAAMC,OAAO,CAACC,GAAG,CACpC,IAAI,CAACxB,eAAe,EAAE,CAACyB,GAAG,CAACC,OAAO,IAAG;MACnC,OAAOA,OAAO,CAACL,KAAK,EAAE;IACxB,CAAC,CAAC,CACH;IACD;IACA,OAAOC,YAAY,CAACK,MAAM,CAAC,CAACC,GAAG,EAAEC,CAAC,KAAI;MACpC,OAAOD,GAAG,CAACE,MAAM,CAACD,CAAC,CAAC;IACtB,CAAC,EAAE,EAAE,CAAC;EACR;EAEA;;;;;;;;;;;;EAYAE,OAAOA,CAAA;IACL,MAAM,IAAIrC,KAAK,CAAC,iBAAiB,CAAC;EACpC;EAEA;;;;EAIAsC,SAASA,CAAA;IACP,MAAM,IAAItC,KAAK,CAAC,iBAAiB,CAAC;EACpC;EAEA;;;;;EAKAuC,KAAKA,CAAA;IACH,MAAM,IAAIvC,KAAK,CAAC,iBAAiB,CAAC;EACpC;EAEA;;;;;EAKAwC,UAAUA,CAAA;IACR,MAAM,IAAIxC,KAAK,CAAC,iBAAiB,CAAC;EACpC;EAEA;;;EAGAyC,WAAWA,CAAA;IACT,MAAM,IAAIzC,KAAK,CAAC,iBAAiB,CAAC;EACpC"},"metadata":{},"sourceType":"module","externalDependencies":[]}