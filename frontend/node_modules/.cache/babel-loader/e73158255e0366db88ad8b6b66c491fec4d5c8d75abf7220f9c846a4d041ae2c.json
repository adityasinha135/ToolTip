{"ast":null,"code":"/**\n * Copyright 2020 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * ConsoleMessage objects are dispatched by page via the 'console' event.\n * @public\n */\nexport class ConsoleMessage {\n  #type;\n  #text;\n  #args;\n  #stackTraceLocations;\n  /**\n   * @public\n   */\n  constructor(type, text, args, stackTraceLocations) {\n    this.#type = type;\n    this.#text = text;\n    this.#args = args;\n    this.#stackTraceLocations = stackTraceLocations;\n  }\n  /**\n   * The type of the console message.\n   */\n  type() {\n    return this.#type;\n  }\n  /**\n   * The text of the console message.\n   */\n  text() {\n    return this.#text;\n  }\n  /**\n   * An array of arguments passed to the console.\n   */\n  args() {\n    return this.#args;\n  }\n  /**\n   * The location of the console message.\n   */\n  location() {\n    return this.#stackTraceLocations[0] ?? {};\n  }\n  /**\n   * The array of locations on the stack of the console message.\n   */\n  stackTrace() {\n    return this.#stackTraceLocations;\n  }\n}","map":{"version":3,"names":["ConsoleMessage","type","text","args","stackTraceLocations","constructor","location","stackTrace"],"sources":["/home/adityasinha/Desktop/React/topdf/node_modules/puppeteer-core/src/common/ConsoleMessage.ts"],"sourcesContent":["/**\n * Copyright 2020 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {JSHandle} from '../api/JSHandle.js';\n\n/**\n * @public\n */\nexport interface ConsoleMessageLocation {\n  /**\n   * URL of the resource if known or `undefined` otherwise.\n   */\n  url?: string;\n\n  /**\n   * 0-based line number in the resource if known or `undefined` otherwise.\n   */\n  lineNumber?: number;\n\n  /**\n   * 0-based column number in the resource if known or `undefined` otherwise.\n   */\n  columnNumber?: number;\n}\n\n/**\n * The supported types for console messages.\n * @public\n */\nexport type ConsoleMessageType =\n  | 'log'\n  | 'debug'\n  | 'info'\n  | 'error'\n  | 'warning'\n  | 'dir'\n  | 'dirxml'\n  | 'table'\n  | 'trace'\n  | 'clear'\n  | 'startGroup'\n  | 'startGroupCollapsed'\n  | 'endGroup'\n  | 'assert'\n  | 'profile'\n  | 'profileEnd'\n  | 'count'\n  | 'timeEnd'\n  | 'verbose';\n\n/**\n * ConsoleMessage objects are dispatched by page via the 'console' event.\n * @public\n */\nexport class ConsoleMessage {\n  #type: ConsoleMessageType;\n  #text: string;\n  #args: JSHandle[];\n  #stackTraceLocations: ConsoleMessageLocation[];\n\n  /**\n   * @public\n   */\n  constructor(\n    type: ConsoleMessageType,\n    text: string,\n    args: JSHandle[],\n    stackTraceLocations: ConsoleMessageLocation[]\n  ) {\n    this.#type = type;\n    this.#text = text;\n    this.#args = args;\n    this.#stackTraceLocations = stackTraceLocations;\n  }\n\n  /**\n   * The type of the console message.\n   */\n  type(): ConsoleMessageType {\n    return this.#type;\n  }\n\n  /**\n   * The text of the console message.\n   */\n  text(): string {\n    return this.#text;\n  }\n\n  /**\n   * An array of arguments passed to the console.\n   */\n  args(): JSHandle[] {\n    return this.#args;\n  }\n\n  /**\n   * The location of the console message.\n   */\n  location(): ConsoleMessageLocation {\n    return this.#stackTraceLocations[0] ?? {};\n  }\n\n  /**\n   * The array of locations on the stack of the console message.\n   */\n  stackTrace(): ConsoleMessageLocation[] {\n    return this.#stackTraceLocations;\n  }\n}\n"],"mappings":"AAAA;;;;;;;;;;;;;;;AA+DA;;;;AAIA,OAAM,MAAOA,cAAc;EACzB,CAAAC,IAAK;EACL,CAAAC,IAAK;EACL,CAAAC,IAAK;EACL,CAAAC,mBAAoB;EAEpB;;;EAGAC,YACEJ,IAAwB,EACxBC,IAAY,EACZC,IAAgB,EAChBC,mBAA6C;IAE7C,IAAI,CAAC,CAAAH,IAAK,GAAGA,IAAI;IACjB,IAAI,CAAC,CAAAC,IAAK,GAAGA,IAAI;IACjB,IAAI,CAAC,CAAAC,IAAK,GAAGA,IAAI;IACjB,IAAI,CAAC,CAAAC,mBAAoB,GAAGA,mBAAmB;EACjD;EAEA;;;EAGAH,IAAIA,CAAA;IACF,OAAO,IAAI,CAAC,CAAAA,IAAK;EACnB;EAEA;;;EAGAC,IAAIA,CAAA;IACF,OAAO,IAAI,CAAC,CAAAA,IAAK;EACnB;EAEA;;;EAGAC,IAAIA,CAAA;IACF,OAAO,IAAI,CAAC,CAAAA,IAAK;EACnB;EAEA;;;EAGAG,QAAQA,CAAA;IACN,OAAO,IAAI,CAAC,CAAAF,mBAAoB,CAAC,CAAC,CAAC,IAAI,EAAE;EAC3C;EAEA;;;EAGAG,UAAUA,CAAA;IACR,OAAO,IAAI,CAAC,CAAAH,mBAAoB;EAClC"},"metadata":{},"sourceType":"module","externalDependencies":[]}