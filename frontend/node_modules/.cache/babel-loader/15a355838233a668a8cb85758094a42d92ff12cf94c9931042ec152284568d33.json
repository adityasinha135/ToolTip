{"ast":null,"code":"/**\n * Copyright 2023 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { from, mergeMap } from '../../../third_party/rxjs/rxjs.js';\nimport { DelegatedLocator } from './locators.js';\n/**\n * @internal\n */\nexport class MappedLocator extends DelegatedLocator {\n  #mapper;\n  constructor(base, mapper) {\n    super(base);\n    this.#mapper = mapper;\n  }\n  _clone() {\n    return new MappedLocator(this.delegate.clone(), this.#mapper).copyOptions(this);\n  }\n  _wait(options) {\n    return this.delegate._wait(options).pipe(mergeMap(handle => {\n      return from(handle.evaluateHandle(this.#mapper));\n    }));\n  }\n}","map":{"version":3,"names":["from","mergeMap","DelegatedLocator","MappedLocator","mapper","constructor","base","_clone","delegate","clone","copyOptions","_wait","options","pipe","handle","evaluateHandle"],"sources":["/home/adityasinha/Desktop/React/topdf/node_modules/puppeteer-core/src/api/locators/MappedLocator.ts"],"sourcesContent":["/**\n * Copyright 2023 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Observable, from, mergeMap} from '../../../third_party/rxjs/rxjs.js';\nimport {Awaitable, HandleFor} from '../../common/common.js';\nimport {JSHandle} from '../JSHandle.js';\n\nimport {ActionOptions, DelegatedLocator, Locator} from './locators.js';\n\n/**\n * @public\n */\nexport type Mapper<From, To> = (value: From) => Awaitable<To>;\n\n/**\n * @internal\n */\nexport class MappedLocator<From, To> extends DelegatedLocator<From, To> {\n  #mapper: Mapper<From, To>;\n\n  constructor(base: Locator<From>, mapper: Mapper<From, To>) {\n    super(base);\n    this.#mapper = mapper;\n  }\n\n  override _clone(): MappedLocator<From, To> {\n    return new MappedLocator(this.delegate.clone(), this.#mapper).copyOptions(\n      this\n    );\n  }\n\n  override _wait(options?: Readonly<ActionOptions>): Observable<HandleFor<To>> {\n    return this.delegate._wait(options).pipe(\n      mergeMap(handle => {\n        return from((handle as JSHandle<From>).evaluateHandle(this.#mapper));\n      })\n    );\n  }\n}\n"],"mappings":"AAAA;;;;;;;;;;;;;;;AAgBA,SAAoBA,IAAI,EAAEC,QAAQ,QAAO,mCAAmC;AAI5E,SAAuBC,gBAAgB,QAAgB,eAAe;AAOtE;;;AAGA,OAAM,MAAOC,aAAwB,SAAQD,gBAA0B;EACrE,CAAAE,MAAO;EAEPC,YAAYC,IAAmB,EAAEF,MAAwB;IACvD,KAAK,CAACE,IAAI,CAAC;IACX,IAAI,CAAC,CAAAF,MAAO,GAAGA,MAAM;EACvB;EAESG,MAAMA,CAAA;IACb,OAAO,IAAIJ,aAAa,CAAC,IAAI,CAACK,QAAQ,CAACC,KAAK,EAAE,EAAE,IAAI,CAAC,CAAAL,MAAO,CAAC,CAACM,WAAW,CACvE,IAAI,CACL;EACH;EAESC,KAAKA,CAACC,OAAiC;IAC9C,OAAO,IAAI,CAACJ,QAAQ,CAACG,KAAK,CAACC,OAAO,CAAC,CAACC,IAAI,CACtCZ,QAAQ,CAACa,MAAM,IAAG;MAChB,OAAOd,IAAI,CAAEc,MAAyB,CAACC,cAAc,CAAC,IAAI,CAAC,CAAAX,MAAO,CAAC,CAAC;IACtE,CAAC,CAAC,CACH;EACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}