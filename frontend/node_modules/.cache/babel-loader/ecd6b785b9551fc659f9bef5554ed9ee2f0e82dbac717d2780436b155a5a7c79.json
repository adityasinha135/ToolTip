{"ast":null,"code":"/**\n * Copyright 2022 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport {};","map":{"version":3,"names":[],"sources":["/home/adityasinha/Desktop/React/topdf/node_modules/puppeteer-core/src/common/TargetManager.ts"],"sourcesContent":["/**\n * Copyright 2022 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Protocol} from 'devtools-protocol';\n\nimport {CDPSession} from './Connection.js';\nimport {EventEmitter} from './EventEmitter.js';\nimport {CDPTarget} from './Target.js';\n\n/**\n * @internal\n */\nexport type TargetFactory = (\n  targetInfo: Protocol.Target.TargetInfo,\n  session?: CDPSession\n) => CDPTarget;\n\n/**\n * @internal\n */\nexport type TargetInterceptor = (\n  createdTarget: CDPTarget,\n  parentTarget: CDPTarget | null\n) => void;\n\n/**\n * TargetManager encapsulates all interactions with CDP targets and is\n * responsible for coordinating the configuration of targets with the rest of\n * Puppeteer. Code outside of this class should not subscribe `Target.*` events\n * and only use the TargetManager events.\n *\n * There are two implementations: one for Chrome that uses CDP's auto-attach\n * mechanism and one for Firefox because Firefox does not support auto-attach.\n *\n * @internal\n */\nexport interface TargetManager extends EventEmitter {\n  getAvailableTargets(): Map<string, CDPTarget>;\n  initialize(): Promise<void>;\n  dispose(): void;\n  addTargetInterceptor(\n    session: CDPSession,\n    interceptor: TargetInterceptor\n  ): void;\n  removeTargetInterceptor(\n    session: CDPSession,\n    interceptor: TargetInterceptor\n  ): void;\n}\n\n/**\n * @internal\n */\nexport const enum TargetManagerEmittedEvents {\n  TargetDiscovered = 'targetDiscovered',\n  TargetAvailable = 'targetAvailable',\n  TargetGone = 'targetGone',\n  /**\n   * Emitted after a target has been initialized and whenever its URL changes.\n   */\n  TargetChanged = 'targetChanged',\n}\n"],"mappings":"AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}