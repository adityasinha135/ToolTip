{"ast":null,"code":"var _jsxFileName = \"/home/adityasinha/Desktop/React/topdf/src/Components/ReactPdf.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { PDFViewer, Page, Document, StyleSheet } from '@react-pdf/renderer';\nimport { saveAs } from 'file-saver';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst styles = StyleSheet.create({\n  page: {\n    width: '200mm',\n    height: '300mm',\n    padding: '20mm'\n  }\n});\nconst App = () => {\n  _s();\n  const [pdfContent, setPdfContent] = useState(['Page content']);\n  const handleCopyPage = numCopies => {\n    const copiedContent = [...pdfContent];\n    for (let i = 0; i < numCopies; i++) {\n      copiedContent.push('Copied content');\n    }\n    setPdfContent(copiedContent);\n  };\n  const handleGeneratePDF = () => {\n    saveAs(pdfBlob, 'customized-pdf.pdf');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleCopyPage(3),\n      children: \"Copy Page 3 times\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGeneratePDF,\n      children: \"Download PDF\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PDFViewer, {\n      children: /*#__PURE__*/_jsxDEV(Document, {\n        children: pdfContent.map((content, index) => /*#__PURE__*/_jsxDEV(Page, {\n          style: styles.page,\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"b5JFjbt8vOXvpYe4QW5cxku6YeY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","PDFViewer","Page","Document","StyleSheet","saveAs","jsxDEV","_jsxDEV","styles","create","page","width","height","padding","App","_s","pdfContent","setPdfContent","handleCopyPage","numCopies","copiedContent","i","push","handleGeneratePDF","pdfBlob","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","content","index","style","_c","$RefreshReg$"],"sources":["/home/adityasinha/Desktop/React/topdf/src/Components/ReactPdf.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { PDFViewer, Page, Document, StyleSheet } from '@react-pdf/renderer';\nimport { saveAs } from 'file-saver';\n\nconst styles = StyleSheet.create({\n  page: {\n    width: '200mm', \n    height: '300mm',\n    padding: '20mm',\n  },\n});\n\nconst App = () => {\n  const [pdfContent, setPdfContent] = useState(['Page content']);\n\n  const handleCopyPage = (numCopies) => {\n    const copiedContent = [...pdfContent];\n    for (let i = 0; i < numCopies; i++) {\n      copiedContent.push('Copied content');\n    }\n    setPdfContent(copiedContent);\n  };\n\n  const handleGeneratePDF = () => {\n    saveAs(pdfBlob, 'customized-pdf.pdf');\n  };\n\n  return (\n    <div>\n      <button onClick={() => handleCopyPage(3)}>Copy Page 3 times</button>\n      <button onClick={handleGeneratePDF}>Download PDF</button>\n      <PDFViewer>\n        <Document>\n          {pdfContent.map((content, index) => (\n            <Page key={index} style={styles.page}>\n              <p>{content}</p>\n            </Page>\n          ))}\n        </Document>\n      </PDFViewer>\n    </div>\n  );\n};\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,SAAS,EAAEC,IAAI,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,qBAAqB;AAC3E,SAASC,MAAM,QAAQ,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,MAAM,GAAGJ,UAAU,CAACK,MAAM,CAAC;EAC/BC,IAAI,EAAE;IACJC,KAAK,EAAE,OAAO;IACdC,MAAM,EAAE,OAAO;IACfC,OAAO,EAAE;EACX;AACF,CAAC,CAAC;AAEF,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGjB,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC;EAE9D,MAAMkB,cAAc,GAAIC,SAAS,IAAK;IACpC,MAAMC,aAAa,GAAG,CAAC,GAAGJ,UAAU,CAAC;IACrC,KAAK,IAAIK,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,SAAS,EAAEE,CAAC,EAAE,EAAE;MAClCD,aAAa,CAACE,IAAI,CAAC,gBAAgB,CAAC;IACtC;IACAL,aAAa,CAACG,aAAa,CAAC;EAC9B,CAAC;EAED,MAAMG,iBAAiB,GAAGA,CAAA,KAAM;IAC9BlB,MAAM,CAACmB,OAAO,EAAE,oBAAoB,CAAC;EACvC,CAAC;EAED,oBACEjB,OAAA;IAAAkB,QAAA,gBACElB,OAAA;MAAQmB,OAAO,EAAEA,CAAA,KAAMR,cAAc,CAAC,CAAC,CAAE;MAAAO,QAAA,EAAC;IAAiB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACpEvB,OAAA;MAAQmB,OAAO,EAAEH,iBAAkB;MAAAE,QAAA,EAAC;IAAY;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACzDvB,OAAA,CAACN,SAAS;MAAAwB,QAAA,eACRlB,OAAA,CAACJ,QAAQ;QAAAsB,QAAA,EACNT,UAAU,CAACe,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBAC7B1B,OAAA,CAACL,IAAI;UAAagC,KAAK,EAAE1B,MAAM,CAACE,IAAK;UAAAe,QAAA,eACnClB,OAAA;YAAAkB,QAAA,EAAIO;UAAO;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI;QAAC,GADPG,KAAK;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEV,CACP;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACM;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACT,CAAC;AAEV,CAAC;AAACf,EAAA,CA9BID,GAAG;AAAAqB,EAAA,GAAHrB,GAAG;AAgCT,eAAeA,GAAG;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}