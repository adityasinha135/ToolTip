{"ast":null,"code":"var _jsxFileName = \"/home/adityasinha/Desktop/React/topdf/src/Components/Topdf.js\",\n  _s = $RefreshSig$();\nimport React, { useRef } from 'react';\nimport jsPDF from 'jspdf';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const contentRef = useRef(null);\n  const handleDownloadPDF = () => {\n    const pdf = new jsPDF('p', 'pt', 'a4'); // Create a new PDF document\n\n    // Options to customize the PDF output\n    const options = {\n      pagesplit: true,\n      // Automatically split pages based on the content's height\n      callback: function () {\n        pdf.save('webpage_content.pdf'); // Save the generated PDF with the given filename\n      }\n    };\n\n    pdf.addHTML(contentRef.current, 15, 15, options); // Add HTML content to the PDF document\n\n    // Alternatively, if you want to capture the entire webpage with the scrollable content:\n    // pdf.addHTML(document.body, 15, 15, options);\n\n    // Note: The options.pagesplit option might not work in all scenarios, and you may need to fine-tune it based on your content.\n\n    // Save the PDF\n    // pdf.save('webpage_content.pdf');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Webpage Content Downloader\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: contentRef,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"This is the content of your webpage.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"You can put any other HTML content here.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleDownloadPDF,\n      children: \"Download PDF\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"76RymMQDwORkpkOdsElhIIY+DNc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useRef","jsPDF","jsxDEV","_jsxDEV","App","_s","contentRef","handleDownloadPDF","pdf","options","pagesplit","callback","save","addHTML","current","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","onClick","_c","$RefreshReg$"],"sources":["/home/adityasinha/Desktop/React/topdf/src/Components/Topdf.js"],"sourcesContent":["import React, { useRef } from 'react';\nimport jsPDF from 'jspdf';\n\nconst App = () => {\n  const contentRef = useRef(null);\n\n  const handleDownloadPDF = () => {\n    const pdf = new jsPDF('p', 'pt', 'a4'); // Create a new PDF document\n\n    // Options to customize the PDF output\n    const options = {\n      pagesplit: true, // Automatically split pages based on the content's height\n      callback: function () {\n        pdf.save('webpage_content.pdf'); // Save the generated PDF with the given filename\n      },\n    };\n\n    pdf.addHTML(contentRef.current, 15, 15, options); // Add HTML content to the PDF document\n\n    // Alternatively, if you want to capture the entire webpage with the scrollable content:\n    // pdf.addHTML(document.body, 15, 15, options);\n\n    // Note: The options.pagesplit option might not work in all scenarios, and you may need to fine-tune it based on your content.\n\n    // Save the PDF\n    // pdf.save('webpage_content.pdf');\n  };\n\n  return (\n    <div>\n      <h1>Webpage Content Downloader</h1>\n      <div ref={contentRef}>\n        {/* Add your webpage content here */}\n        <p>This is the content of your webpage.</p>\n        <p>You can put any other HTML content here.</p>\n      </div>\n      <button onClick={handleDownloadPDF}>Download PDF</button>\n    </div>\n  );\n};\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,QAAQ,OAAO;AACrC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAMC,UAAU,GAAGN,MAAM,CAAC,IAAI,CAAC;EAE/B,MAAMO,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,MAAMC,GAAG,GAAG,IAAIP,KAAK,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;;IAExC;IACA,MAAMQ,OAAO,GAAG;MACdC,SAAS,EAAE,IAAI;MAAE;MACjBC,QAAQ,EAAE,SAAAA,CAAA,EAAY;QACpBH,GAAG,CAACI,IAAI,CAAC,qBAAqB,CAAC,CAAC,CAAC;MACnC;IACF,CAAC;;IAEDJ,GAAG,CAACK,OAAO,CAACP,UAAU,CAACQ,OAAO,EAAE,EAAE,EAAE,EAAE,EAAEL,OAAO,CAAC,CAAC,CAAC;;IAElD;IACA;;IAEA;;IAEA;IACA;EACF,CAAC;;EAED,oBACEN,OAAA;IAAAY,QAAA,gBACEZ,OAAA;MAAAY,QAAA,EAAI;IAA0B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnChB,OAAA;MAAKiB,GAAG,EAAEd,UAAW;MAAAS,QAAA,gBAEnBZ,OAAA;QAAAY,QAAA,EAAG;MAAoC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAC3ChB,OAAA;QAAAY,QAAA,EAAG;MAAwC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC,eACNhB,OAAA;MAAQkB,OAAO,EAAEd,iBAAkB;MAAAQ,QAAA,EAAC;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtD,CAAC;AAEV,CAAC;AAACd,EAAA,CApCID,GAAG;AAAAkB,EAAA,GAAHlB,GAAG;AAsCT,eAAeA,GAAG;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}