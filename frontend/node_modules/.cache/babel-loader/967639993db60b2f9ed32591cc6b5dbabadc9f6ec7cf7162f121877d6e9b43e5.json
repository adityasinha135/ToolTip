{"ast":null,"code":"/**\n * Copyright 2017 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Frame as BaseFrame } from '../api/Frame.js';\nimport { assert } from '../util/assert.js';\nimport { Deferred } from '../util/Deferred.js';\nimport { isErrorLike } from '../util/ErrorLike.js';\nimport { IsolatedWorld } from './IsolatedWorld.js';\nimport { MAIN_WORLD, PUPPETEER_WORLD } from './IsolatedWorlds.js';\nimport { LifecycleWatcher } from './LifecycleWatcher.js';\nimport { withSourcePuppeteerURLIfNone } from './util.js';\n/**\n * @internal\n */\nexport class Frame extends BaseFrame {\n  #url = '';\n  #detached = false;\n  #client;\n  _frameManager;\n  _id;\n  _loaderId = '';\n  _hasStartedLoading = false;\n  _lifecycleEvents = new Set();\n  _parentId;\n  constructor(frameManager, frameId, parentFrameId, client) {\n    super();\n    this._frameManager = frameManager;\n    this.#url = '';\n    this._id = frameId;\n    this._parentId = parentFrameId;\n    this.#detached = false;\n    this._loaderId = '';\n    this.updateClient(client);\n  }\n  updateClient(client) {\n    this.#client = client;\n    this.worlds = {\n      [MAIN_WORLD]: new IsolatedWorld(this),\n      [PUPPETEER_WORLD]: new IsolatedWorld(this)\n    };\n  }\n  page() {\n    return this._frameManager.page();\n  }\n  isOOPFrame() {\n    return this.#client !== this._frameManager.client;\n  }\n  async goto(url, options = {}) {\n    const {\n      referer = this._frameManager.networkManager.extraHTTPHeaders()['referer'],\n      referrerPolicy = this._frameManager.networkManager.extraHTTPHeaders()['referer-policy'],\n      waitUntil = ['load'],\n      timeout = this._frameManager.timeoutSettings.navigationTimeout()\n    } = options;\n    let ensureNewDocumentNavigation = false;\n    const watcher = new LifecycleWatcher(this._frameManager, this, waitUntil, timeout);\n    let error = await Deferred.race([navigate(this.#client, url, referer, referrerPolicy, this._id), watcher.terminationPromise()]);\n    if (!error) {\n      error = await Deferred.race([watcher.terminationPromise(), ensureNewDocumentNavigation ? watcher.newDocumentNavigationPromise() : watcher.sameDocumentNavigationPromise()]);\n    }\n    try {\n      if (error) {\n        throw error;\n      }\n      return await watcher.navigationResponse();\n    } finally {\n      watcher.dispose();\n    }\n    async function navigate(client, url, referrer, referrerPolicy, frameId) {\n      try {\n        const response = await client.send('Page.navigate', {\n          url,\n          referrer,\n          frameId,\n          referrerPolicy\n        });\n        ensureNewDocumentNavigation = !!response.loaderId;\n        if (response.errorText === 'net::ERR_HTTP_RESPONSE_CODE_FAILURE') {\n          return null;\n        }\n        return response.errorText ? new Error(`${response.errorText} at ${url}`) : null;\n      } catch (error) {\n        if (isErrorLike(error)) {\n          return error;\n        }\n        throw error;\n      }\n    }\n  }\n  async waitForNavigation(options = {}) {\n    const {\n      waitUntil = ['load'],\n      timeout = this._frameManager.timeoutSettings.navigationTimeout()\n    } = options;\n    const watcher = new LifecycleWatcher(this._frameManager, this, waitUntil, timeout);\n    const error = await Deferred.race([watcher.terminationPromise(), watcher.sameDocumentNavigationPromise(), watcher.newDocumentNavigationPromise()]);\n    try {\n      if (error) {\n        throw error;\n      }\n      return await watcher.navigationResponse();\n    } finally {\n      watcher.dispose();\n    }\n  }\n  _client() {\n    return this.#client;\n  }\n  executionContext() {\n    return this.worlds[MAIN_WORLD].executionContext();\n  }\n  /**\n   * @internal\n   */\n  mainRealm() {\n    return this.worlds[MAIN_WORLD];\n  }\n  /**\n   * @internal\n   */\n  isolatedRealm() {\n    return this.worlds[PUPPETEER_WORLD];\n  }\n  async evaluateHandle(pageFunction, ...args) {\n    pageFunction = withSourcePuppeteerURLIfNone(this.evaluateHandle.name, pageFunction);\n    return this.mainRealm().evaluateHandle(pageFunction, ...args);\n  }\n  async evaluate(pageFunction, ...args) {\n    pageFunction = withSourcePuppeteerURLIfNone(this.evaluate.name, pageFunction);\n    return this.mainRealm().evaluate(pageFunction, ...args);\n  }\n  async $(selector) {\n    return this.mainRealm().$(selector);\n  }\n  async $$(selector) {\n    return this.mainRealm().$$(selector);\n  }\n  async $eval(selector, pageFunction, ...args) {\n    pageFunction = withSourcePuppeteerURLIfNone(this.$eval.name, pageFunction);\n    return this.mainRealm().$eval(selector, pageFunction, ...args);\n  }\n  async $$eval(selector, pageFunction, ...args) {\n    pageFunction = withSourcePuppeteerURLIfNone(this.$$eval.name, pageFunction);\n    return this.mainRealm().$$eval(selector, pageFunction, ...args);\n  }\n  async $x(expression) {\n    return this.mainRealm().$x(expression);\n  }\n  async content() {\n    return this.isolatedRealm().content();\n  }\n  async setContent(html, options = {}) {\n    return this.isolatedRealm().setContent(html, options);\n  }\n  name() {\n    return this._name || '';\n  }\n  url() {\n    return this.#url;\n  }\n  parentFrame() {\n    return this._frameManager._frameTree.parentFrame(this._id) || null;\n  }\n  childFrames() {\n    return this._frameManager._frameTree.childFrames(this._id);\n  }\n  isDetached() {\n    return this.#detached;\n  }\n  async title() {\n    return this.isolatedRealm().title();\n  }\n  _deviceRequestPromptManager() {\n    if (this.isOOPFrame()) {\n      return this._frameManager._deviceRequestPromptManager(this.#client);\n    }\n    const parentFrame = this.parentFrame();\n    assert(parentFrame !== null);\n    return parentFrame._deviceRequestPromptManager();\n  }\n  waitForDevicePrompt(options = {}) {\n    return this._deviceRequestPromptManager().waitForDevicePrompt(options);\n  }\n  _navigated(framePayload) {\n    this._name = framePayload.name;\n    this.#url = `${framePayload.url}${framePayload.urlFragment || ''}`;\n  }\n  _navigatedWithinDocument(url) {\n    this.#url = url;\n  }\n  _onLifecycleEvent(loaderId, name) {\n    if (name === 'init') {\n      this._loaderId = loaderId;\n      this._lifecycleEvents.clear();\n    }\n    this._lifecycleEvents.add(name);\n  }\n  _onLoadingStopped() {\n    this._lifecycleEvents.add('DOMContentLoaded');\n    this._lifecycleEvents.add('load');\n  }\n  _onLoadingStarted() {\n    this._hasStartedLoading = true;\n  }\n  _detach() {\n    this.#detached = true;\n    this.worlds[MAIN_WORLD]._detach();\n    this.worlds[PUPPETEER_WORLD]._detach();\n  }\n}","map":{"version":3,"names":["Frame","BaseFrame","assert","Deferred","isErrorLike","IsolatedWorld","MAIN_WORLD","PUPPETEER_WORLD","LifecycleWatcher","withSourcePuppeteerURLIfNone","url","detached","client","_frameManager","_id","_loaderId","_hasStartedLoading","_lifecycleEvents","Set","_parentId","constructor","frameManager","frameId","parentFrameId","updateClient","worlds","page","isOOPFrame","goto","options","referer","networkManager","extraHTTPHeaders","referrerPolicy","waitUntil","timeout","timeoutSettings","navigationTimeout","ensureNewDocumentNavigation","watcher","error","race","navigate","terminationPromise","newDocumentNavigationPromise","sameDocumentNavigationPromise","navigationResponse","dispose","referrer","response","send","loaderId","errorText","Error","waitForNavigation","_client","executionContext","mainRealm","isolatedRealm","evaluateHandle","pageFunction","args","name","evaluate","$","selector","$$","$eval","$$eval","$x","expression","content","setContent","html","_name","parentFrame","_frameTree","childFrames","isDetached","title","_deviceRequestPromptManager","waitForDevicePrompt","_navigated","framePayload","urlFragment","_navigatedWithinDocument","_onLifecycleEvent","clear","add","_onLoadingStopped","_onLoadingStarted","_detach"],"sources":["/home/adityasinha/Desktop/React/topdf/node_modules/puppeteer-core/src/common/Frame.ts"],"sourcesContent":["/**\n * Copyright 2017 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Protocol} from 'devtools-protocol';\n\nimport {ElementHandle} from '../api/ElementHandle.js';\nimport {Frame as BaseFrame} from '../api/Frame.js';\nimport {HTTPResponse} from '../api/HTTPResponse.js';\nimport {Page, WaitTimeoutOptions} from '../api/Page.js';\nimport {assert} from '../util/assert.js';\nimport {Deferred} from '../util/Deferred.js';\nimport {isErrorLike} from '../util/ErrorLike.js';\n\nimport {CDPSession} from './Connection.js';\nimport {\n  DeviceRequestPrompt,\n  DeviceRequestPromptManager,\n} from './DeviceRequestPrompt.js';\nimport {ExecutionContext} from './ExecutionContext.js';\nimport {FrameManager} from './FrameManager.js';\nimport {IsolatedWorld} from './IsolatedWorld.js';\nimport {MAIN_WORLD, PUPPETEER_WORLD} from './IsolatedWorlds.js';\nimport {LifecycleWatcher, PuppeteerLifeCycleEvent} from './LifecycleWatcher.js';\nimport {EvaluateFunc, EvaluateFuncWith, HandleFor, NodeFor} from './types.js';\nimport {withSourcePuppeteerURLIfNone} from './util.js';\n\n/**\n * @internal\n */\nexport class Frame extends BaseFrame {\n  #url = '';\n  #detached = false;\n  #client!: CDPSession;\n\n  _frameManager: FrameManager;\n  override _id: string;\n  _loaderId = '';\n  override _hasStartedLoading = false;\n  _lifecycleEvents = new Set<string>();\n  override _parentId?: string;\n\n  constructor(\n    frameManager: FrameManager,\n    frameId: string,\n    parentFrameId: string | undefined,\n    client: CDPSession\n  ) {\n    super();\n    this._frameManager = frameManager;\n    this.#url = '';\n    this._id = frameId;\n    this._parentId = parentFrameId;\n    this.#detached = false;\n\n    this._loaderId = '';\n\n    this.updateClient(client);\n  }\n\n  updateClient(client: CDPSession): void {\n    this.#client = client;\n    this.worlds = {\n      [MAIN_WORLD]: new IsolatedWorld(this),\n      [PUPPETEER_WORLD]: new IsolatedWorld(this),\n    };\n  }\n\n  override page(): Page {\n    return this._frameManager.page();\n  }\n\n  override isOOPFrame(): boolean {\n    return this.#client !== this._frameManager.client;\n  }\n\n  override async goto(\n    url: string,\n    options: {\n      referer?: string;\n      referrerPolicy?: string;\n      timeout?: number;\n      waitUntil?: PuppeteerLifeCycleEvent | PuppeteerLifeCycleEvent[];\n    } = {}\n  ): Promise<HTTPResponse | null> {\n    const {\n      referer = this._frameManager.networkManager.extraHTTPHeaders()['referer'],\n      referrerPolicy = this._frameManager.networkManager.extraHTTPHeaders()[\n        'referer-policy'\n      ],\n      waitUntil = ['load'],\n      timeout = this._frameManager.timeoutSettings.navigationTimeout(),\n    } = options;\n\n    let ensureNewDocumentNavigation = false;\n    const watcher = new LifecycleWatcher(\n      this._frameManager,\n      this,\n      waitUntil,\n      timeout\n    );\n    let error = await Deferred.race([\n      navigate(\n        this.#client,\n        url,\n        referer,\n        referrerPolicy as Protocol.Page.ReferrerPolicy,\n        this._id\n      ),\n      watcher.terminationPromise(),\n    ]);\n    if (!error) {\n      error = await Deferred.race([\n        watcher.terminationPromise(),\n        ensureNewDocumentNavigation\n          ? watcher.newDocumentNavigationPromise()\n          : watcher.sameDocumentNavigationPromise(),\n      ]);\n    }\n\n    try {\n      if (error) {\n        throw error;\n      }\n      return await watcher.navigationResponse();\n    } finally {\n      watcher.dispose();\n    }\n\n    async function navigate(\n      client: CDPSession,\n      url: string,\n      referrer: string | undefined,\n      referrerPolicy: Protocol.Page.ReferrerPolicy | undefined,\n      frameId: string\n    ): Promise<Error | null> {\n      try {\n        const response = await client.send('Page.navigate', {\n          url,\n          referrer,\n          frameId,\n          referrerPolicy,\n        });\n        ensureNewDocumentNavigation = !!response.loaderId;\n        if (response.errorText === 'net::ERR_HTTP_RESPONSE_CODE_FAILURE') {\n          return null;\n        }\n        return response.errorText\n          ? new Error(`${response.errorText} at ${url}`)\n          : null;\n      } catch (error) {\n        if (isErrorLike(error)) {\n          return error;\n        }\n        throw error;\n      }\n    }\n  }\n\n  override async waitForNavigation(\n    options: {\n      timeout?: number;\n      waitUntil?: PuppeteerLifeCycleEvent | PuppeteerLifeCycleEvent[];\n    } = {}\n  ): Promise<HTTPResponse | null> {\n    const {\n      waitUntil = ['load'],\n      timeout = this._frameManager.timeoutSettings.navigationTimeout(),\n    } = options;\n    const watcher = new LifecycleWatcher(\n      this._frameManager,\n      this,\n      waitUntil,\n      timeout\n    );\n    const error = await Deferred.race([\n      watcher.terminationPromise(),\n      watcher.sameDocumentNavigationPromise(),\n      watcher.newDocumentNavigationPromise(),\n    ]);\n    try {\n      if (error) {\n        throw error;\n      }\n      return await watcher.navigationResponse();\n    } finally {\n      watcher.dispose();\n    }\n  }\n\n  override _client(): CDPSession {\n    return this.#client;\n  }\n\n  override executionContext(): Promise<ExecutionContext> {\n    return this.worlds[MAIN_WORLD].executionContext();\n  }\n\n  /**\n   * @internal\n   */\n  override mainRealm(): IsolatedWorld {\n    return this.worlds[MAIN_WORLD];\n  }\n\n  /**\n   * @internal\n   */\n  override isolatedRealm(): IsolatedWorld {\n    return this.worlds[PUPPETEER_WORLD];\n  }\n\n  override async evaluateHandle<\n    Params extends unknown[],\n    Func extends EvaluateFunc<Params> = EvaluateFunc<Params>,\n  >(\n    pageFunction: Func | string,\n    ...args: Params\n  ): Promise<HandleFor<Awaited<ReturnType<Func>>>> {\n    pageFunction = withSourcePuppeteerURLIfNone(\n      this.evaluateHandle.name,\n      pageFunction\n    );\n    return this.mainRealm().evaluateHandle(pageFunction, ...args);\n  }\n\n  override async evaluate<\n    Params extends unknown[],\n    Func extends EvaluateFunc<Params> = EvaluateFunc<Params>,\n  >(\n    pageFunction: Func | string,\n    ...args: Params\n  ): Promise<Awaited<ReturnType<Func>>> {\n    pageFunction = withSourcePuppeteerURLIfNone(\n      this.evaluate.name,\n      pageFunction\n    );\n    return this.mainRealm().evaluate(pageFunction, ...args);\n  }\n\n  override async $<Selector extends string>(\n    selector: Selector\n  ): Promise<ElementHandle<NodeFor<Selector>> | null> {\n    return this.mainRealm().$(selector);\n  }\n\n  override async $$<Selector extends string>(\n    selector: Selector\n  ): Promise<Array<ElementHandle<NodeFor<Selector>>>> {\n    return this.mainRealm().$$(selector);\n  }\n\n  override async $eval<\n    Selector extends string,\n    Params extends unknown[],\n    Func extends EvaluateFuncWith<NodeFor<Selector>, Params> = EvaluateFuncWith<\n      NodeFor<Selector>,\n      Params\n    >,\n  >(\n    selector: Selector,\n    pageFunction: Func | string,\n    ...args: Params\n  ): Promise<Awaited<ReturnType<Func>>> {\n    pageFunction = withSourcePuppeteerURLIfNone(this.$eval.name, pageFunction);\n    return this.mainRealm().$eval(selector, pageFunction, ...args);\n  }\n\n  override async $$eval<\n    Selector extends string,\n    Params extends unknown[],\n    Func extends EvaluateFuncWith<\n      Array<NodeFor<Selector>>,\n      Params\n    > = EvaluateFuncWith<Array<NodeFor<Selector>>, Params>,\n  >(\n    selector: Selector,\n    pageFunction: Func | string,\n    ...args: Params\n  ): Promise<Awaited<ReturnType<Func>>> {\n    pageFunction = withSourcePuppeteerURLIfNone(this.$$eval.name, pageFunction);\n    return this.mainRealm().$$eval(selector, pageFunction, ...args);\n  }\n\n  override async $x(expression: string): Promise<Array<ElementHandle<Node>>> {\n    return this.mainRealm().$x(expression);\n  }\n\n  override async content(): Promise<string> {\n    return this.isolatedRealm().content();\n  }\n\n  override async setContent(\n    html: string,\n    options: {\n      timeout?: number;\n      waitUntil?: PuppeteerLifeCycleEvent | PuppeteerLifeCycleEvent[];\n    } = {}\n  ): Promise<void> {\n    return this.isolatedRealm().setContent(html, options);\n  }\n\n  override name(): string {\n    return this._name || '';\n  }\n\n  override url(): string {\n    return this.#url;\n  }\n\n  override parentFrame(): Frame | null {\n    return this._frameManager._frameTree.parentFrame(this._id) || null;\n  }\n\n  override childFrames(): Frame[] {\n    return this._frameManager._frameTree.childFrames(this._id);\n  }\n\n  override isDetached(): boolean {\n    return this.#detached;\n  }\n\n  override async title(): Promise<string> {\n    return this.isolatedRealm().title();\n  }\n\n  _deviceRequestPromptManager(): DeviceRequestPromptManager {\n    if (this.isOOPFrame()) {\n      return this._frameManager._deviceRequestPromptManager(this.#client);\n    }\n    const parentFrame = this.parentFrame();\n    assert(parentFrame !== null);\n    return parentFrame._deviceRequestPromptManager();\n  }\n\n  override waitForDevicePrompt(\n    options: WaitTimeoutOptions = {}\n  ): Promise<DeviceRequestPrompt> {\n    return this._deviceRequestPromptManager().waitForDevicePrompt(options);\n  }\n\n  _navigated(framePayload: Protocol.Page.Frame): void {\n    this._name = framePayload.name;\n    this.#url = `${framePayload.url}${framePayload.urlFragment || ''}`;\n  }\n\n  _navigatedWithinDocument(url: string): void {\n    this.#url = url;\n  }\n\n  _onLifecycleEvent(loaderId: string, name: string): void {\n    if (name === 'init') {\n      this._loaderId = loaderId;\n      this._lifecycleEvents.clear();\n    }\n    this._lifecycleEvents.add(name);\n  }\n\n  _onLoadingStopped(): void {\n    this._lifecycleEvents.add('DOMContentLoaded');\n    this._lifecycleEvents.add('load');\n  }\n\n  _onLoadingStarted(): void {\n    this._hasStartedLoading = true;\n  }\n\n  _detach(): void {\n    this.#detached = true;\n    this.worlds[MAIN_WORLD]._detach();\n    this.worlds[PUPPETEER_WORLD]._detach();\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}